openapi: 3.0.3
info:
  title: ReportPortal
  description: Report Portal API documentation
  contact:
    name: Support
    email: support@reportportal.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: 5.10.1
# Manual added section
servers:
  - url: '{protocol}://{authority}/api'
    description: ReportPortal server
    variables:
      protocol:
        default: https
        description: Protocol
        enum:
          - http
          - https
      authority:
        description: Host name and port (if needed) of Report Portal server
        default: demo.reportportal.io
# Manual added section
security:
  - bearerAuth: []
tags:
  - name: activity-controller
    description: Activity Controller
  - name: activity-event-controller
    description: Activity Event Controller
  - name: bug-tracking-system-controller
    description: Bug Tracking System Controller
  - name: dashboard-controller
    description: Dashboard Controller
  - name: demo-data-controller
    description: Demo Data Controller
  - name: file-storage-controller
    description: File Storage Controller
  - name: integration-controller
    description: Integration Controller
  - name: launch-async-controller
    description: Launch Async Controller
  - name: launch-controller
    description: Launch Controller
  - name: log-async-controller
    description: Log Async Controller
  - name: log-controller
    description: Log Controller
  - name: onboarding-controller
    description: Onboarding Controller
  - name: plugin-controller
    description: Plugin Controller
  - name: project-controller
    description: Project Controller
  - name: project-settings-controller
    description: Project Settings Controller
  - name: settings-controller
    description: Settings Controller
  - name: test-item-async-controller
    description: Test Item Async Controller
  - name: test-item-controller
    description: Test Item Controller
  - name: user-controller
    description: User Controller
  - name: user-filter-controller
    description: User Filter Controller
  - name: widget-controller
    description: Widget Controller
paths:
  /v1/activities/searches:
    post:
      tags:
        - activity-event-controller
      summary: Get activities by search criteria
      operationId: getActivitiesUsingPOST
      parameters:
        - name: limit
          in: query
          description: limit
          required: true
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: offset
          required: true
          schema:
            type: integer
            format: int32
        - name: order
          in: query
          description: order
          required: true
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: sort
          in: query
          description: sort
          required: true
          schema:
            type: string
      requestBody:
        description: searchCriteria
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCriteriaRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedResponse«ActivityEventResource»'
      deprecated: false
      x-codegen-request-body-name: searchCriteria
  /v1/bts/{integrationId}/fields-set:
    get:
      tags:
        - bug-tracking-system-controller
      summary: Get list of fields required for posting ticket
      operationId: getSetOfIntegrationSystemFieldsUsingGET
      parameters:
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
        - name: issueType
          in: query
          description: issueType
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostFormField'
      deprecated: false
  /v1/bts/{integrationId}/issue_types:
    get:
      tags:
        - bug-tracking-system-controller
      summary: Get list of existed issue types in bts
      operationId: getAllowableIssueTypesUsingGET
      parameters:
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/bts/{projectName}/ticket/{ticketId}:
    get:
      tags:
        - bug-tracking-system-controller
      summary: Get ticket from the bts integration
      operationId: getTicketUsingGET
      parameters:
        - name: btsProject
          in: query
          description: btsProject
          required: true
          schema:
            type: string
        - name: btsUrl
          in: query
          description: btsUrl
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: ticketId
          in: path
          description: ticketId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Ticket'
      deprecated: false
  /v1/bts/{projectName}/{integrationId}/fields-set:
    get:
      tags:
        - bug-tracking-system-controller
      summary: Get list of fields required for posting ticket in concrete integration
      operationId: getSetOfIntegrationSystemFieldsUsingGET_1
      parameters:
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
        - name: issueType
          in: query
          description: issueType
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostFormField'
      deprecated: false
  /v1/bts/{projectName}/{integrationId}/issue_types:
    get:
      tags:
        - bug-tracking-system-controller
      summary: Get list of allowable issue types for bug tracking system
      operationId: getAllowableIssueTypesUsingGET_1
      parameters:
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/bts/{projectName}/{integrationId}/ticket:
    post:
      tags:
        - bug-tracking-system-controller
      summary: Post ticket to the bts integration
      operationId: createIssueUsingPOST
      parameters:
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: ticketRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTicketRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Ticket'
      deprecated: false
      x-codegen-request-body-name: ticketRQ
  /v1/data/clean:
    post:
      tags:
        - file-storage-controller
      summary: Remove attachments from file storage according to uploaded csv file
      operationId: removeAttachmentsByCsvUsingPOST
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  description: file
                  format: binary
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/data/photo:
    get:
      tags:
        - file-storage-controller
      summary: Get photo of current user
      operationId: getMyPhotoUsingGET
      parameters:
        - name: loadThumbnail
          in: query
          description: loadThumbnail
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content: {}
      deprecated: false
    post:
      tags:
        - file-storage-controller
      summary: Upload user's photo
      operationId: uploadPhotoUsingPOST
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  description: file
                  format: binary
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
    delete:
      tags:
        - file-storage-controller
      summary: Delete user's photo
      operationId: deletePhotoUsingDELETE
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/data/{projectName}/userphoto:
    get:
      tags:
        - file-storage-controller
      summary: Get user's photo
      operationId: getUserPhotoUsingGET
      parameters:
        - name: id
          in: query
          description: id
          required: true
          schema:
            type: string
        - name: loadThumbnail
          in: query
          description: loadThumbnail
          schema:
            type: boolean
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
      deprecated: false
  /v1/data/{projectName}/{dataId}:
    get:
      tags:
        - file-storage-controller
      summary: getFile
      operationId: getFileUsingGET
      parameters:
        - name: dataId
          in: path
          description: dataId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
      deprecated: false
  /v1/demo/{projectName}/generate:
    post:
      tags:
        - demo-data-controller
      summary: generate
      operationId: generateUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: demoDataRq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoDataRq'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DemoDataRs'
      deprecated: false
      x-codegen-request-body-name: demoDataRq
  /v1/integration/all/{type}:
    delete:
      tags:
        - integration-controller
      summary: Delete all global integrations by type
      operationId: deleteAllIntegrationsUsingDELETE
      parameters:
        - name: type
          in: path
          description: type
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/integration/global/all:
    get:
      tags:
        - integration-controller
      summary: Get available global integrations
      operationId: getGlobalIntegrationsUsingGET_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationResource'
      deprecated: false
  /v1/integration/global/all/{pluginName}:
    get:
      tags:
        - integration-controller
      summary: Get available global integrations for plugin
      operationId: getGlobalIntegrationsUsingGET
      parameters:
        - name: pluginName
          in: path
          description: pluginName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationResource'
      deprecated: false
  /v1/integration/project/{projectName}/all:
    get:
      tags:
        - integration-controller
      summary: Get available project integrations
      operationId: getProjectIntegrationsUsingGET_1
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationResource'
      deprecated: false
  /v1/integration/project/{projectName}/all/{pluginName}:
    get:
      tags:
        - integration-controller
      summary: Get available project integrations for plugin
      operationId: getProjectIntegrationsUsingGET
      parameters:
        - name: pluginName
          in: path
          description: pluginName
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationResource'
      deprecated: false
  /v1/integration/{integrationId}:
    get:
      tags:
        - integration-controller
      summary: Get global Report Portal integration instance
      operationId: getGlobalIntegrationUsingGET
      parameters:
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IntegrationResource'
      deprecated: false
    put:
      tags:
        - integration-controller
      summary: Update global Report Portal integration instance
      operationId: updateGlobalIntegrationUsingPUT
      parameters:
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: updateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: updateRequest
    delete:
      tags:
        - integration-controller
      summary: Delete global integration instance
      operationId: deleteGlobalIntegrationUsingDELETE
      parameters:
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/integration/{integrationId}/connection/test:
    get:
      tags:
        - integration-controller
      summary: Test connection to the global integration
      operationId: testIntegrationConnectionUsingGET
      parameters:
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
      deprecated: false
  /v1/integration/{pluginName}:
    post:
      tags:
        - integration-controller
      summary: Create global Report Portal integration instance
      operationId: createGlobalIntegrationUsingPOST
      parameters:
        - name: pluginName
          in: path
          description: pluginName
          required: true
          schema:
            type: string
      requestBody:
        description: createRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
      deprecated: false
      x-codegen-request-body-name: createRequest
  /v1/integration/{projectName}/all/{type}:
    delete:
      tags:
        - integration-controller
      summary: Delete all integrations assigned to specified project
      operationId: deleteAllProjectIntegrationsUsingDELETE
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: type
          in: path
          description: type
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/integration/{projectName}/{integrationId}:
    get:
      tags:
        - integration-controller
      summary: Get integration instance
      operationId: getProjectIntegrationUsingGET
      parameters:
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IntegrationResource'
      deprecated: false
    put:
      tags:
        - integration-controller
      summary: Update project integration instance
      operationId: updateProjectIntegrationUsingPUT
      parameters:
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: updateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: updateRequest
    delete:
      tags:
        - integration-controller
      summary: Delete project integration instance
      operationId: deleteProjectIntegrationUsingDELETE
      parameters:
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/integration/{projectName}/{integrationId}/connection/test:
    get:
      tags:
        - integration-controller
      summary: Test connection to the integration through the project config
      operationId: testIntegrationConnectionUsingGET_1
      parameters:
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
      deprecated: false
  /v1/integration/{projectName}/{integrationId}/{command}:
    put:
      tags:
        - integration-controller
      summary: Execute command to the integration instance
      operationId: executeIntegrationCommandUsingPUT
      parameters:
        - name: command
          in: path
          description: command
          required: true
          schema:
            type: string
        - name: integrationId
          in: path
          description: integrationId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: executionParams
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
      deprecated: false
      x-codegen-request-body-name: executionParams
  /v1/integration/{projectName}/{pluginName}:
    post:
      tags:
        - integration-controller
      summary: Create project Report Portal integration instance
      operationId: createProjectIntegrationUsingPOST
      parameters:
        - name: pluginName
          in: path
          description: pluginName
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: createRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
      deprecated: false
      x-codegen-request-body-name: createRequest
  /v1/onboarding:
    get:
      tags:
        - onboarding-controller
      summary: 'Return onboarding information for page if available, -1 otherwise'
      operationId: onBoardingUsingGET
      parameters:
        - name: page
          in: query
          description: page
          schema:
            type: string
            default: GENERAL
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
      deprecated: false
  /v1/plugin:
    get:
      tags:
        - plugin-controller
      summary: Get all available plugins
      operationId: getPluginsUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationTypeResource'
      deprecated: false
    post:
      tags:
        - plugin-controller
      summary: Upload new Report Portal plugin
      operationId: uploadPluginUsingPOST
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  description: file
                  format: binary
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
      deprecated: false
  /v1/plugin/{pluginId}:
    put:
      tags:
        - plugin-controller
      summary: Update Report Portal plugin state
      operationId: updatePluginStateUsingPUT
      parameters:
        - name: pluginId
          in: path
          description: pluginId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: updatePluginStateRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePluginStateRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: updatePluginStateRQ
    delete:
      tags:
        - plugin-controller
      summary: Delete plugin by id
      operationId: deletePluginUsingDELETE
      parameters:
        - name: pluginId
          in: path
          description: pluginId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/plugin/{projectName}/{pluginName}/common/{command}:
    put:
      tags:
        - plugin-controller
      summary: Execute command to the plugin instance
      operationId: executePluginCommandUsingPUT
      parameters:
        - name: command
          in: path
          description: command
          required: true
          schema:
            type: string
        - name: pluginName
          in: path
          description: pluginName
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: executionParams
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
      deprecated: false
      x-codegen-request-body-name: executionParams
  /v1/project:
    post:
      tags:
        - project-controller
      summary: Create new project
      operationId: createProjectUsingPOST
      requestBody:
        description: createProjectRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
      deprecated: false
      x-codegen-request-body-name: createProjectRQ
    delete:
      tags:
        - project-controller
      summary: Delete multiple projects
      description: Could be deleted only by users with administrator role
      operationId: deleteProjectUsingDELETE_1
      requestBody:
        description: deleteBulkRQ
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeleteBulkRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeleteBulkRS'
      deprecated: false
      x-codegen-request-body-name: deleteBulkRQ
  /v1/project/analyzer/status:
    get:
      tags:
        - project-controller
      summary: getAnalyzerIndexingStatus
      operationId: getAnalyzerIndexingStatusUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: boolean
      deprecated: false
  /v1/project/export:
    get:
      tags:
        - project-controller
      summary: Exports information about all projects
      description: Allowable only for users with administrator role
      operationId: exportProjectsUsingGET
      parameters:
        - name: filter.eq.creationDate
          in: query
          description: Filters by 'creationDate'
          schema:
            type: string
            format: date-time
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.lastRun
          in: query
          description: Filters by 'lastRun'
          schema:
            type: string
            format: date-time
        - name: filter.eq.launchesQuantity
          in: query
          description: Filters by 'launchesQuantity'
          schema:
            type: integer
            format: int64
        - name: filter.eq.name
          in: query
          description: Filters by 'name'
          schema:
            type: string
        - name: filter.eq.organization
          in: query
          description: Filters by 'organization'
          schema:
            type: string
        - name: filter.eq.type
          in: query
          description: Filters by 'type'
          schema:
            type: string
        - name: filter.eq.usersQuantity
          in: query
          description: Filters by 'usersQuantity'
          schema:
            type: integer
            format: int64
        - name: view
          in: query
          description: view
          allowEmptyValue: false
          schema:
            type: string
            default: csv
            enum:
              - csv
      responses:
        '200':
          description: OK
          content: {}
      deprecated: false
  /v1/project/list:
    get:
      tags:
        - project-controller
      summary: getAllProjectsInfo
      operationId: getAllProjectsInfoUsingGET
      parameters:
        - name: filter.eq.creationDate
          in: query
          description: Filters by 'creationDate'
          schema:
            type: string
            format: date-time
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.lastRun
          in: query
          description: Filters by 'lastRun'
          schema:
            type: string
            format: date-time
        - name: filter.eq.launchesQuantity
          in: query
          description: Filters by 'launchesQuantity'
          schema:
            type: integer
            format: int64
        - name: filter.eq.name
          in: query
          description: Filters by 'name'
          schema:
            type: string
        - name: filter.eq.organization
          in: query
          description: Filters by 'organization'
          schema:
            type: string
        - name: filter.eq.type
          in: query
          description: Filters by 'type'
          schema:
            type: string
        - name: filter.eq.usersQuantity
          in: query
          description: Filters by 'usersQuantity'
          schema:
            type: integer
            format: int64
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«ProjectInfoResource»'
      deprecated: false
  /v1/project/list/{projectName}:
    get:
      tags:
        - project-controller
      summary: getProjectInfo
      operationId: getProjectInfoUsingGET
      parameters:
        - name: interval
          in: query
          description: interval
          schema:
            type: string
            default: 3M
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectInfoResource'
      deprecated: false
  /v1/project/names:
    get:
      tags:
        - project-controller
      summary: getAllProjectNames
      operationId: getAllProjectNamesUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«string»'
      deprecated: false
  /v1/project/names/search:
    get:
      tags:
        - project-controller
      summary: searchProjectNames
      operationId: searchProjectNamesUsingGET
      parameters:
        - name: term
          in: query
          description: term
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«string»'
      deprecated: false
  /v1/project/{projectId}:
    delete:
      tags:
        - project-controller
      summary: Delete project
      description: Could be deleted only by users with administrator role
      operationId: deleteProjectUsingDELETE
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/project/{projectName}:
    get:
      tags:
        - project-controller
      summary: Get information about project
      description: Only for users that are assigned to the project
      operationId: getProjectUsingGET
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectResource'
      deprecated: false
    put:
      tags:
        - project-controller
      summary: Update project
      operationId: updateProjectUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: updateProjectRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: updateProjectRQ
  /v1/project/{projectName}/assign:
    put:
      tags:
        - project-controller
      summary: Assign users
      operationId: assignProjectUsersUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: assignUsersRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignUsersRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: assignUsersRQ
  /v1/project/{projectName}/assignable:
    get:
      tags:
        - project-controller
      summary: Load users which can be assigned to specified project
      description: Only for users with project manager permissions
      operationId: getUsersForAssignUsingGET
      parameters:
        - name: filter.eq.email
          in: query
          description: Filters by 'email'
          schema:
            type: string
        - name: filter.eq.expired
          in: query
          description: Filters by 'expired'
          schema:
            type: boolean
        - name: filter.eq.fullName
          in: query
          description: Filters by 'fullName'
          schema:
            type: string
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.lastLogin
          in: query
          description: Filters by 'lastLogin'
          schema:
            type: integer
            format: int64
        - name: filter.eq.project
          in: query
          description: Filters by 'project'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.role
          in: query
          description: Filters by 'role'
          schema:
            type: string
        - name: filter.eq.synchronizationDate
          in: query
          description: Filters by 'synchronizationDate'
          schema:
            type: integer
            format: int64
        - name: filter.eq.type
          in: query
          description: Filters by 'type'
          schema:
            type: string
        - name: filter.eq.user
          in: query
          description: Filters by 'user'
          schema:
            type: string
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«UserResource»'
      deprecated: false
  /v1/project/{projectName}/index:
    put:
      tags:
        - project-controller
      summary: Starts reindex all project data in ML
      operationId: indexProjectDataUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
    delete:
      tags:
        - project-controller
      summary: Delete project index from ML
      operationId: deleteProjectIndexUsingDELETE
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/project/{projectName}/notification:
    put:
      tags:
        - project-controller
      summary: Update project notifications configuration
      operationId: updateProjectNotificationConfigUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: updateProjectNotificationConfigRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectNotificationConfigDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: updateProjectNotificationConfigRQ
  /v1/project/{projectName}/preference/{login}:
    get:
      tags:
        - project-controller
      summary: Load user preferences
      description: Only for users that allowed to edit other users
      operationId: getUserPreferenceUsingGET
      parameters:
        - name: login
          in: path
          description: login
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PreferenceResource'
      deprecated: false
  /v1/project/{projectName}/preference/{login}/{filterId}:
    put:
      tags:
        - project-controller
      summary: addUserPreference
      operationId: addUserPreferenceUsingPUT
      parameters:
        - name: filterId
          in: path
          description: filterId
          required: true
          schema:
            type: integer
            format: int64
        - name: login
          in: path
          description: login
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
    delete:
      tags:
        - project-controller
      summary: removeUserPreference
      operationId: removeUserPreferenceUsingDELETE
      parameters:
        - name: filterId
          in: path
          description: filterId
          required: true
          schema:
            type: integer
            format: int64
        - name: login
          in: path
          description: login
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/project/{projectName}/unassign:
    put:
      tags:
        - project-controller
      summary: Un assign users
      operationId: unassignProjectUsersUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: unassignUsersRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnassignUsersRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: unassignUsersRQ
  /v1/project/{projectName}/usernames:
    get:
      tags:
        - project-controller
      summary: Load project users by filter
      description: Only for users that are members of the project
      operationId: getProjectUsersUsingGET
      parameters:
        - name: filter.cnt.users
          in: query
          description: filter.cnt.users
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/project/{projectName}/usernames/search:
    get:
      tags:
        - project-controller
      summary: searchForUser
      operationId: searchForUserUsingGET
      parameters:
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: term
          in: query
          description: term
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«SearchUserResource»'
      deprecated: false
  /v1/project/{projectName}/users:
    get:
      tags:
        - project-controller
      summary: Get users assigned on current project
      operationId: getProjectUsersUsingGET_1
      parameters:
        - name: filter.eq.email
          in: query
          description: Filters by 'email'
          schema:
            type: string
        - name: filter.eq.expired
          in: query
          description: Filters by 'expired'
          schema:
            type: boolean
        - name: filter.eq.fullName
          in: query
          description: Filters by 'fullName'
          schema:
            type: string
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.lastLogin
          in: query
          description: Filters by 'lastLogin'
          schema:
            type: integer
            format: int64
        - name: filter.eq.project
          in: query
          description: Filters by 'project'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.role
          in: query
          description: Filters by 'role'
          schema:
            type: string
        - name: filter.eq.synchronizationDate
          in: query
          description: Filters by 'synchronizationDate'
          schema:
            type: integer
            format: int64
        - name: filter.eq.type
          in: query
          description: Filters by 'type'
          schema:
            type: string
        - name: filter.eq.user
          in: query
          description: Filters by 'user'
          schema:
            type: string
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«UserResource»'
      deprecated: false
  /v1/project/{projectName}/widget/{widgetCode}:
    get:
      tags:
        - project-controller
      summary: getProjectWidget
      operationId: getProjectWidgetUsingGET
      parameters:
        - name: interval
          in: query
          description: interval
          schema:
            type: string
            default: 3M
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: widgetCode
          in: path
          description: widgetCode
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
      deprecated: false
  /v1/settings:
    get:
      tags:
        - settings-controller
      summary: Get server settings
      operationId: getServerSettingsUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
      deprecated: false
  /v1/settings/analytics:
    put:
      tags:
        - settings-controller
      summary: Update analytics settings
      operationId: saveAnalyticsSettingsUsingPUT
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsResource'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: request
    post:
      tags:
        - settings-controller
      summary: Update analytics settings
      operationId: saveAnalyticsSettingsUsingPOST
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsResource'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: request
  /v1/user:
    get:
      tags:
        - user-controller
      summary: Return information about current logged-in user
      operationId: getMyselfUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResource'
      deprecated: false
    post:
      tags:
        - user-controller
      summary: Create specified user
      description: Allowable only for users with administrator role
      operationId: createUserByAdminUsingPOST
      requestBody:
        description: rq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRQFull'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateUserRS'
      deprecated: false
      x-codegen-request-body-name: rq
    delete:
      tags:
        - user-controller
      summary: Delete specified users by ids
      operationId: deleteUsersUsingDELETE
      requestBody:
        description: deleteBulkRQ
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeleteBulkRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeleteBulkRS'
      deprecated: false
      x-codegen-request-body-name: deleteBulkRQ
  /v1/user/:
    get:
      tags:
        - user-controller
      summary: Return information about current logged-in user
      operationId: getMyselfUsingGET_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResource'
      deprecated: false
  /v1/user/all:
    get:
      tags:
        - user-controller
      summary: Return information about all users
      description: Allowable only for users with administrator role
      operationId: getUsersUsingGET
      parameters:
        - name: filter.eq.email
          in: query
          description: Filters by 'email'
          schema:
            type: string
        - name: filter.eq.expired
          in: query
          description: Filters by 'expired'
          schema:
            type: boolean
        - name: filter.eq.fullName
          in: query
          description: Filters by 'fullName'
          schema:
            type: string
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.lastLogin
          in: query
          description: Filters by 'lastLogin'
          schema:
            type: integer
            format: int64
        - name: filter.eq.project
          in: query
          description: Filters by 'project'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.role
          in: query
          description: Filters by 'role'
          schema:
            type: string
        - name: filter.eq.synchronizationDate
          in: query
          description: Filters by 'synchronizationDate'
          schema:
            type: integer
            format: int64
        - name: filter.eq.type
          in: query
          description: Filters by 'type'
          schema:
            type: string
        - name: filter.eq.user
          in: query
          description: Filters by 'user'
          schema:
            type: string
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«UserResource»'
      deprecated: false
  /v1/user/bid:
    post:
      tags:
        - user-controller
      summary: Register invitation for user who will be created
      operationId: createUserBidUsingPOST
      requestBody:
        description: createUserRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateUserBidRS'
      deprecated: false
      x-codegen-request-body-name: createUserRQ
  /v1/user/export:
    get:
      tags:
        - user-controller
      summary: Exports information about all users
      description: Allowable only for users with administrator role
      operationId: exportUsingGET
      parameters:
        - name: filter.eq.email
          in: query
          description: Filters by 'email'
          schema:
            type: string
        - name: filter.eq.expired
          in: query
          description: Filters by 'expired'
          schema:
            type: boolean
        - name: filter.eq.fullName
          in: query
          description: Filters by 'fullName'
          schema:
            type: string
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.lastLogin
          in: query
          description: Filters by 'lastLogin'
          schema:
            type: integer
            format: int64
        - name: filter.eq.project
          in: query
          description: Filters by 'project'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.role
          in: query
          description: Filters by 'role'
          schema:
            type: string
        - name: filter.eq.synchronizationDate
          in: query
          description: Filters by 'synchronizationDate'
          schema:
            type: integer
            format: int64
        - name: filter.eq.type
          in: query
          description: Filters by 'type'
          schema:
            type: string
        - name: filter.eq.user
          in: query
          description: Filters by 'user'
          schema:
            type: string
        - name: view
          in: query
          description: view
          allowEmptyValue: false
          schema:
            type: string
            default: csv
            enum:
              - csv
      responses:
        '200':
          description: OK
          content: {}
      deprecated: false
  /v1/user/password/change:
    post:
      tags:
        - user-controller
      summary: Change own password
      operationId: changePasswordUsingPOST
      requestBody:
        description: changePasswordRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: changePasswordRQ
  /v1/user/password/reset:
    post:
      tags:
        - user-controller
      summary: Reset password
      operationId: resetPasswordUsingPOST
      requestBody:
        description: rq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: rq
  /v1/user/password/reset/{uuid}:
    get:
      tags:
        - user-controller
      summary: Check if a restore password bid exists
      operationId: isRestorePasswordBidExistUsingGET
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/YesNoRS'
      deprecated: false
  /v1/user/password/restore:
    post:
      tags:
        - user-controller
      summary: Create a restore password request
      operationId: restorePasswordUsingPOST
      requestBody:
        description: rq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePasswordRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: rq
  /v1/user/registration:
    get:
      tags:
        - user-controller
      summary: getUserBidInfo
      operationId: getUserBidInfoUsingGET
      parameters:
        - name: uuid
          in: query
          description: uuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserBidRS'
      deprecated: false
    post:
      tags:
        - user-controller
      summary: Activate invitation and create user in system
      operationId: createUserUsingPOST
      parameters:
        - name: uuid
          in: query
          description: uuid
          required: true
          schema:
            type: string
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRQConfirm'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateUserRS'
      deprecated: false
      x-codegen-request-body-name: request
  /v1/user/registration/info:
    get:
      tags:
        - user-controller
      summary: validateInfo
      operationId: validateInfoUsingGET
      parameters:
        - name: email
          in: query
          description: email
          schema:
            type: string
        - name: username
          in: query
          description: username
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/YesNoRS'
      deprecated: false
  /v1/user/search:
    get:
      tags:
        - user-controller
      summary: findUsers
      operationId: findUsersUsingGET
      parameters:
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: term
          in: query
          description: term
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«UserResource»'
      deprecated: false
  /v1/user/{id}:
    delete:
      tags:
        - user-controller
      summary: Delete specified user
      operationId: deleteUserUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/user/{login}:
    get:
      tags:
        - user-controller
      summary: Return information about specified user
      description: Only for administrators and profile's owner
      operationId: getUserUsingGET
      parameters:
        - name: login
          in: path
          description: login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResource'
      deprecated: false
    put:
      tags:
        - user-controller
      summary: Edit specified user
      description: Only for administrators and profile's owner
      operationId: editUserUsingPUT
      parameters:
        - name: login
          in: path
          description: login
          required: true
          schema:
            type: string
      requestBody:
        description: editUserRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUserRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: editUserRQ
  /v1/user/{userId}/api-keys:
    get:
      tags:
        - user-controller
      summary: Get List of users Api Keys
      operationId: getUsersApiKeysUsingGET
      parameters:
        - name: userId
          in: path
          description: userId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiKeysRS'
      deprecated: false
    post:
      tags:
        - user-controller
      summary: Create new Api Key for current user
      operationId: createApiKeyUsingPOST
      parameters:
        - name: userId
          in: path
          description: userId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: apiKeyRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiKeyRS'
      deprecated: false
      x-codegen-request-body-name: apiKeyRQ
  /v1/user/{userId}/api-keys/{keyId}:
    delete:
      tags:
        - user-controller
      summary: Delete specified Api Key
      operationId: deleteApiKeyUsingDELETE
      parameters:
        - name: keyId
          in: path
          description: keyId
          required: true
          schema:
            type: integer
            format: int64
        - name: userId
          in: path
          description: userId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/user/{userName}/projects:
    get:
      tags:
        - user-controller
      summary: getUserProjects
      operationId: getUserProjectsUsingGET
      parameters:
        - name: userName
          in: path
          description: userName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/AssignedProject'
      deprecated: false
  /v1/{projectName}/activity/item/{itemId}:
    get:
      tags:
        - activity-controller
      summary: Get activities for test item
      operationId: getTestItemActivitiesUsingGET
      parameters:
        - name: filter.eq.action
          in: query
          description: Filters by 'action'
          schema:
            type: string
        - name: filter.eq.createdAt
          in: query
          description: Filters by 'createdAt'
          schema:
            type: string
            format: date-time
        - name: filter.eq.eventName
          in: query
          description: Filters by 'eventName'
          schema:
            type: string
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.objectId
          in: query
          description: Filters by 'objectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.objectName
          in: query
          description: Filters by 'objectName'
          schema:
            type: string
        - name: filter.eq.objectType
          in: query
          description: Filters by 'objectType'
          schema:
            type: string
        - name: filter.eq.priority
          in: query
          description: Filters by 'priority'
          schema:
            type: string
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.projectName
          in: query
          description: Filters by 'projectName'
          schema:
            type: string
        - name: filter.eq.subjectId
          in: query
          description: Filters by 'subjectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.subjectName
          in: query
          description: Filters by 'subjectName'
          schema:
            type: string
        - name: filter.eq.subjectType
          in: query
          description: Filters by 'subjectType'
          schema:
            type: string
        - name: filter.eq.user
          in: query
          description: Filters by 'user'
          schema:
            type: string
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: integer
            format: int64
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«ActivityResource»'
      deprecated: false
  /v1/{projectName}/activity/{activityId}:
    get:
      tags:
        - activity-controller
      summary: getActivity
      operationId: getActivityUsingGET
      parameters:
        - name: activityId
          in: path
          description: activityId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActivityResource'
      deprecated: false
  /v1/{projectName}/dashboard:
    get:
      tags:
        - dashboard-controller
      summary: Get all permitted dashboard resources for specified project
      operationId: getAllDashboardsUsingGET
      parameters:
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.name
          in: query
          description: Filters by 'name'
          schema:
            type: string
        - name: filter.eq.owner
          in: query
          description: Filters by 'owner'
          schema:
            type: string
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«DashboardResource»'
      deprecated: false
    post:
      tags:
        - dashboard-controller
      summary: Create dashboard for specified project
      operationId: createDashboardUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: createRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDashboardRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
      deprecated: false
      x-codegen-request-body-name: createRQ
  /v1/{projectName}/dashboard/{dashboardId}:
    get:
      tags:
        - dashboard-controller
      summary: Get specified dashboard by ID for specified project
      operationId: getDashboardUsingGET
      parameters:
        - name: dashboardId
          in: path
          description: dashboardId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DashboardResource'
      deprecated: false
    put:
      tags:
        - dashboard-controller
      summary: Update specified dashboard for specified project
      operationId: updateDashboardUsingPUT
      parameters:
        - name: dashboardId
          in: path
          description: dashboardId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: updateRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDashboardRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: updateRQ
    delete:
      tags:
        - dashboard-controller
      summary: Delete specified dashboard by ID for specified project
      operationId: deleteDashboardUsingDELETE
      parameters:
        - name: dashboardId
          in: path
          description: dashboardId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/{projectName}/dashboard/{dashboardId}/add:
    put:
      tags:
        - dashboard-controller
      summary: Add widget to specified dashboard
      operationId: addWidgetUsingPUT
      parameters:
        - name: dashboardId
          in: path
          description: dashboardId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: addWidgetRq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWidgetRq'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: addWidgetRq
  /v1/{projectName}/dashboard/{dashboardId}/{widgetId}:
    delete:
      tags:
        - dashboard-controller
      summary: Remove widget from specified dashboard
      operationId: removeWidgetUsingDELETE
      parameters:
        - name: dashboardId
          in: path
          description: dashboardId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: widgetId
          in: path
          description: widgetId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/{projectName}/filter:
    get:
      tags:
        - user-filter-controller
      summary: Get filters
      operationId: getAllFiltersUsingGET
      parameters:
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.name
          in: query
          description: Filters by 'name'
          schema:
            type: string
        - name: filter.eq.owner
          in: query
          description: Filters by 'owner'
          schema:
            type: string
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«UserFilterResource»'
      deprecated: false
    put:
      tags:
        - user-filter-controller
      summary: Update list of user filters
      operationId: updateUserFiltersUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: updateRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionsRQ«BulkUpdateFilterRQ»'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: updateRQ
    post:
      tags:
        - user-filter-controller
      summary: Create user filter
      operationId: createFilterUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: createFilterRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserFilterRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
      deprecated: false
      x-codegen-request-body-name: createFilterRQ
  /v1/{projectName}/filter/filters:
    get:
      tags:
        - user-filter-controller
      summary: Get list of specified user filters
      operationId: getUserFiltersUsingGET
      parameters:
        - name: ids
          in: query
          description: ids
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserFilterResource'
      deprecated: false
  /v1/{projectName}/filter/names:
    get:
      tags:
        - user-filter-controller
      summary: Get available filter names
      operationId: getAllFiltersNamesUsingGET
      parameters:
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.name
          in: query
          description: Filters by 'name'
          schema:
            type: string
        - name: filter.eq.owner
          in: query
          description: Filters by 'owner'
          schema:
            type: string
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«OwnedEntityResource»'
      deprecated: false
  /v1/{projectName}/filter/{filterId}:
    get:
      tags:
        - user-filter-controller
      summary: Get specified user filter by id
      operationId: getFilterUsingGET
      parameters:
        - name: filterId
          in: path
          description: filterId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserFilterResource'
      deprecated: false
    put:
      tags:
        - user-filter-controller
      summary: Update specified user filter
      operationId: updateUserFilterUsingPUT
      parameters:
        - name: filterId
          in: path
          description: filterId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: updateRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserFilterRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: updateRQ
    delete:
      tags:
        - user-filter-controller
      summary: Delete specified user filter by id
      operationId: deleteFilterUsingDELETE
      parameters:
        - name: filterId
          in: path
          description: filterId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/{projectName}/item:
    get:
      tags:
        - test-item-controller
      summary: Find test items by specified filter
      operationId: getTestItemsUsingGET_2
      parameters:
        - name: filter.eq.attributeKey
          in: query
          description: Filters by 'attributeKey'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.attributeValue
          in: query
          description: Filters by 'attributeValue'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.autoAnalyzed
          in: query
          description: Filters by 'autoAnalyzed'
          schema:
            type: boolean
        - name: filter.eq.clusterId
          in: query
          description: Filters by 'clusterId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.compositeAttribute
          in: query
          description: Filters by 'compositeAttribute'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.eq.description
          in: query
          description: Filters by 'description'
          schema:
            type: string
        - name: filter.eq.duration
          in: query
          description: Filters by 'duration'
          schema:
            type: integer
            format: int64
        - name: filter.eq.endTime
          in: query
          description: Filters by 'endTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.hasChildren
          in: query
          description: Filters by 'hasChildren'
          schema:
            type: boolean
        - name: filter.eq.hasRetries
          in: query
          description: Filters by 'hasRetries'
          schema:
            type: boolean
        - name: filter.eq.hasStats
          in: query
          description: Filters by 'hasStats'
          schema:
            type: boolean
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.ignoreAnalyzer
          in: query
          description: Filters by 'ignoreAnalyzer'
          schema:
            type: boolean
        - name: filter.eq.issueComment
          in: query
          description: Filters by 'issueComment'
          schema:
            type: string
        - name: filter.eq.issueGroupId
          in: query
          description: Filters by 'issueGroupId'
          schema:
            type: integer
            format: int32
        - name: filter.eq.issueId
          in: query
          description: Filters by 'issueId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.issueType
          in: query
          description: Filters by 'issueType'
          schema:
            type: string
        - name: filter.eq.issueTypeId
          in: query
          description: Filters by 'issueTypeId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.key
          in: query
          description: Filters by 'key'
          schema:
            type: string
        - name: filter.eq.lastModified
          in: query
          description: Filters by 'lastModified'
          schema:
            type: string
        - name: filter.eq.launchId
          in: query
          description: Filters by 'launchId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.levelAttribute
          in: query
          description: Filters by 'levelAttribute'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.locator
          in: query
          description: Filters by 'locator'
          schema:
            type: string
        - name: filter.eq.mode
          in: query
          description: Filters by 'mode'
          schema:
            type: string
        - name: filter.eq.name
          in: query
          description: Filters by 'name'
          schema:
            type: string
        - name: filter.eq.parentId
          in: query
          description: Filters by 'parentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.parentId
          in: query
          description: Filters by 'parentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.path
          in: query
          description: Filters by 'path'
          schema:
            type: integer
            format: int64
        - name: filter.eq.patternName
          in: query
          description: Filters by 'patternName'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.retryParentId
          in: query
          description: Filters by 'retryParentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.startTime
          in: query
          description: Filters by 'startTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.statistics$defects$automation_bug$ab001
          in: query
          description: Filters by 'statistics$defects$automation_bug$ab001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$no_defect$nd001
          in: query
          description: Filters by 'statistics$defects$no_defect$nd001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$product_bug$pb001
          in: query
          description: Filters by 'statistics$defects$product_bug$pb001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$system_issue$si001
          in: query
          description: Filters by 'statistics$defects$system_issue$si001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$to_investigate$ti001
          in: query
          description: Filters by 'statistics$defects$to_investigate$ti001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$failed
          in: query
          description: Filters by 'statistics$executions$failed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$passed
          in: query
          description: Filters by 'statistics$executions$passed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$skipped
          in: query
          description: Filters by 'statistics$executions$skipped'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$total
          in: query
          description: Filters by 'statistics$executions$total'
          schema:
            type: integer
            format: int64
        - name: filter.eq.status
          in: query
          description: Filters by 'status'
          schema:
            type: string
        - name: filter.eq.testCaseHash
          in: query
          description: Filters by 'testCaseHash'
          schema:
            type: integer
            format: int32
        - name: filter.eq.testCaseId
          in: query
          description: Filters by 'testCaseId'
          schema:
            type: string
        - name: filter.eq.ticketId
          in: query
          description: Filters by 'ticketId'
          schema:
            type: string
        - name: filter.eq.type
          in: query
          description: Filters by 'type'
          schema:
            type: string
        - name: filter.eq.uniqueId
          in: query
          description: Filters by 'uniqueId'
          schema:
            type: string
        - name: filter.eq.uuid
          in: query
          description: Filters by 'uuid'
          schema:
            type: string
        - name: filter.eq.value
          in: query
          description: Filters by 'value'
          schema:
            type: string
        - name: filterId
          in: query
          description: filterId
          schema:
            type: integer
            format: int64
        - name: isLatest
          in: query
          description: isLatest
          schema:
            type: boolean
            default: false
        - name: launchesLimit
          in: query
          description: launchesLimit
          schema:
            type: integer
            format: int32
            default: 0
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«TestItemResource»'
      deprecated: false
    put:
      tags:
        - test-item-controller
      summary: Update issues of specified test items
      operationId: defineTestItemIssueTypeUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefineIssueRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Issue'
      deprecated: false
      x-codegen-request-body-name: request
    post:
      tags:
        - test-item-controller
      summary: Start a root test item
      operationId: startRootItemUsingPOST_1
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: startTestItemRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTestItemRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
      deprecated: false
      x-codegen-request-body-name: startTestItemRQ
    delete:
      tags:
        - test-item-controller
      summary: Delete test items by specified ids
      operationId: deleteTestItemsUsingDELETE
      parameters:
        - name: ids
          in: query
          description: ids
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/{projectName}/item/attribute/keys:
    get:
      tags:
        - test-item-controller
      summary: Get all unique attribute keys of specified launch
      operationId: getAttributeKeysUsingGET_1
      parameters:
        - name: filter.cnt.attributeKey
          in: query
          description: filter.cnt.attributeKey
          required: true
          schema:
            type: string
        - name: launch
          in: query
          description: launch
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/{projectName}/item/attribute/keys/all:
    get:
      tags:
        - test-item-controller
      summary: Get all unique attribute keys of specified launch
      operationId: getAttributeKeysForProjectUsingGET
      parameters:
        - name: filter.cnt.attributeKey
          in: query
          description: filter.cnt.attributeKey
          required: true
          schema:
            type: string
        - name: filterId
          in: query
          description: filterId
          required: true
          schema:
            type: integer
            format: int64
        - name: isLatest
          in: query
          description: isLatest
          schema:
            type: boolean
            default: false
        - name: launchesLimit
          in: query
          description: launchesLimit
          schema:
            type: integer
            format: int32
            default: 0
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/{projectName}/item/attribute/values:
    get:
      tags:
        - test-item-controller
      summary: Get all unique attribute values of specified launch
      operationId: getAttributeValuesUsingGET_1
      parameters:
        - name: filter.cnt.attributeValue
          in: query
          description: filter.cnt.attributeValue
          required: true
          schema:
            type: string
        - name: filter.eq.attributeKey
          in: query
          description: filter.eq.attributeKey
          schema:
            type: string
        - name: launch
          in: query
          description: launch
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/{projectName}/item/history:
    get:
      tags:
        - test-item-controller
      summary: Load history of test items
      operationId: getItemsHistoryUsingGET
      parameters:
        - name: filter.eq.attributeKey
          in: query
          description: Filters by 'attributeKey'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.attributeValue
          in: query
          description: Filters by 'attributeValue'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.autoAnalyzed
          in: query
          description: Filters by 'autoAnalyzed'
          schema:
            type: boolean
        - name: filter.eq.clusterId
          in: query
          description: Filters by 'clusterId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.compositeAttribute
          in: query
          description: Filters by 'compositeAttribute'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.eq.description
          in: query
          description: Filters by 'description'
          schema:
            type: string
        - name: filter.eq.duration
          in: query
          description: Filters by 'duration'
          schema:
            type: integer
            format: int64
        - name: filter.eq.endTime
          in: query
          description: Filters by 'endTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.hasChildren
          in: query
          description: Filters by 'hasChildren'
          schema:
            type: boolean
        - name: filter.eq.hasRetries
          in: query
          description: Filters by 'hasRetries'
          schema:
            type: boolean
        - name: filter.eq.hasStats
          in: query
          description: Filters by 'hasStats'
          schema:
            type: boolean
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.ignoreAnalyzer
          in: query
          description: Filters by 'ignoreAnalyzer'
          schema:
            type: boolean
        - name: filter.eq.issueComment
          in: query
          description: Filters by 'issueComment'
          schema:
            type: string
        - name: filter.eq.issueGroupId
          in: query
          description: Filters by 'issueGroupId'
          schema:
            type: integer
            format: int32
        - name: filter.eq.issueId
          in: query
          description: Filters by 'issueId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.issueType
          in: query
          description: Filters by 'issueType'
          schema:
            type: string
        - name: filter.eq.issueTypeId
          in: query
          description: Filters by 'issueTypeId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.key
          in: query
          description: Filters by 'key'
          schema:
            type: string
        - name: filter.eq.lastModified
          in: query
          description: Filters by 'lastModified'
          schema:
            type: string
        - name: filter.eq.launchId
          in: query
          description: Filters by 'launchId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.levelAttribute
          in: query
          description: Filters by 'levelAttribute'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.locator
          in: query
          description: Filters by 'locator'
          schema:
            type: string
        - name: filter.eq.mode
          in: query
          description: Filters by 'mode'
          schema:
            type: string
        - name: filter.eq.name
          in: query
          description: Filters by 'name'
          schema:
            type: string
        - name: filter.eq.parentId
          in: query
          description: Filters by 'parentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.parentId
          in: query
          description: Filters by 'parentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.path
          in: query
          description: Filters by 'path'
          schema:
            type: integer
            format: int64
        - name: filter.eq.patternName
          in: query
          description: Filters by 'patternName'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.retryParentId
          in: query
          description: Filters by 'retryParentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.startTime
          in: query
          description: Filters by 'startTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.statistics$defects$automation_bug$ab001
          in: query
          description: Filters by 'statistics$defects$automation_bug$ab001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$no_defect$nd001
          in: query
          description: Filters by 'statistics$defects$no_defect$nd001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$product_bug$pb001
          in: query
          description: Filters by 'statistics$defects$product_bug$pb001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$system_issue$si001
          in: query
          description: Filters by 'statistics$defects$system_issue$si001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$to_investigate$ti001
          in: query
          description: Filters by 'statistics$defects$to_investigate$ti001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$failed
          in: query
          description: Filters by 'statistics$executions$failed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$passed
          in: query
          description: Filters by 'statistics$executions$passed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$skipped
          in: query
          description: Filters by 'statistics$executions$skipped'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$total
          in: query
          description: Filters by 'statistics$executions$total'
          schema:
            type: integer
            format: int64
        - name: filter.eq.status
          in: query
          description: Filters by 'status'
          schema:
            type: string
        - name: filter.eq.testCaseHash
          in: query
          description: Filters by 'testCaseHash'
          schema:
            type: integer
            format: int32
        - name: filter.eq.testCaseId
          in: query
          description: Filters by 'testCaseId'
          schema:
            type: string
        - name: filter.eq.ticketId
          in: query
          description: Filters by 'ticketId'
          schema:
            type: string
        - name: filter.eq.type
          in: query
          description: Filters by 'type'
          schema:
            type: string
        - name: filter.eq.uniqueId
          in: query
          description: Filters by 'uniqueId'
          schema:
            type: string
        - name: filter.eq.uuid
          in: query
          description: Filters by 'uuid'
          schema:
            type: string
        - name: filter.eq.value
          in: query
          description: Filters by 'value'
          schema:
            type: string
        - name: filterId
          in: query
          description: filterId
          schema:
            type: integer
            format: int64
        - name: historyDepth
          in: query
          description: historyDepth
          schema:
            type: integer
            format: int32
            default: 5
        - name: isLatest
          in: query
          description: isLatest
          schema:
            type: boolean
            default: false
        - name: launchesLimit
          in: query
          description: launchesLimit
          schema:
            type: integer
            format: int32
            default: 0
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: type
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«TestItemHistoryElement»'
      deprecated: false
  /v1/{projectName}/item/info:
    put:
      tags:
        - test-item-controller
      summary: Bulk update attributes and description
      operationId: bulkUpdateUsingPUT_1
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: bulkInfoUpdateRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkInfoUpdateRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: bulkInfoUpdateRQ
  /v1/{projectName}/item/issue/link:
    put:
      tags:
        - test-item-controller
      summary: Attach external issue for specified test items
      operationId: linkExternalIssuesUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: rq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkExternalIssueRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: rq
  /v1/{projectName}/item/issue/unlink:
    put:
      tags:
        - test-item-controller
      summary: Unlink external issue for specified test items
      operationId: unlinkExternalIssuesUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: rq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnlinkExternalIssueRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: rq
  /v1/{projectName}/item/items:
    get:
      tags:
        - test-item-controller
      summary: Get test items by specified ids
      operationId: getTestItemsUsingGET
      parameters:
        - name: ids
          in: query
          description: ids
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestItemResource'
      deprecated: false
  /v1/{projectName}/item/statistics:
    get:
      tags:
        - test-item-controller
      summary: Find accumulated statistics of items by specified filter
      operationId: getTestItemsUsingGET_1
      parameters:
        - name: filter.eq.attributeKey
          in: query
          description: Filters by 'attributeKey'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.attributeValue
          in: query
          description: Filters by 'attributeValue'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.autoAnalyzed
          in: query
          description: Filters by 'autoAnalyzed'
          schema:
            type: boolean
        - name: filter.eq.clusterId
          in: query
          description: Filters by 'clusterId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.compositeAttribute
          in: query
          description: Filters by 'compositeAttribute'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.eq.description
          in: query
          description: Filters by 'description'
          schema:
            type: string
        - name: filter.eq.duration
          in: query
          description: Filters by 'duration'
          schema:
            type: integer
            format: int64
        - name: filter.eq.endTime
          in: query
          description: Filters by 'endTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.hasChildren
          in: query
          description: Filters by 'hasChildren'
          schema:
            type: boolean
        - name: filter.eq.hasRetries
          in: query
          description: Filters by 'hasRetries'
          schema:
            type: boolean
        - name: filter.eq.hasStats
          in: query
          description: Filters by 'hasStats'
          schema:
            type: boolean
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.ignoreAnalyzer
          in: query
          description: Filters by 'ignoreAnalyzer'
          schema:
            type: boolean
        - name: filter.eq.issueComment
          in: query
          description: Filters by 'issueComment'
          schema:
            type: string
        - name: filter.eq.issueGroupId
          in: query
          description: Filters by 'issueGroupId'
          schema:
            type: integer
            format: int32
        - name: filter.eq.issueId
          in: query
          description: Filters by 'issueId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.issueType
          in: query
          description: Filters by 'issueType'
          schema:
            type: string
        - name: filter.eq.issueTypeId
          in: query
          description: Filters by 'issueTypeId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.key
          in: query
          description: Filters by 'key'
          schema:
            type: string
        - name: filter.eq.lastModified
          in: query
          description: Filters by 'lastModified'
          schema:
            type: string
        - name: filter.eq.launchId
          in: query
          description: Filters by 'launchId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.levelAttribute
          in: query
          description: Filters by 'levelAttribute'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.locator
          in: query
          description: Filters by 'locator'
          schema:
            type: string
        - name: filter.eq.mode
          in: query
          description: Filters by 'mode'
          schema:
            type: string
        - name: filter.eq.name
          in: query
          description: Filters by 'name'
          schema:
            type: string
        - name: filter.eq.parentId
          in: query
          description: Filters by 'parentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.parentId
          in: query
          description: Filters by 'parentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.path
          in: query
          description: Filters by 'path'
          schema:
            type: integer
            format: int64
        - name: filter.eq.patternName
          in: query
          description: Filters by 'patternName'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.retryParentId
          in: query
          description: Filters by 'retryParentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.startTime
          in: query
          description: Filters by 'startTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.statistics$defects$automation_bug$ab001
          in: query
          description: Filters by 'statistics$defects$automation_bug$ab001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$no_defect$nd001
          in: query
          description: Filters by 'statistics$defects$no_defect$nd001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$product_bug$pb001
          in: query
          description: Filters by 'statistics$defects$product_bug$pb001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$system_issue$si001
          in: query
          description: Filters by 'statistics$defects$system_issue$si001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$to_investigate$ti001
          in: query
          description: Filters by 'statistics$defects$to_investigate$ti001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$failed
          in: query
          description: Filters by 'statistics$executions$failed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$passed
          in: query
          description: Filters by 'statistics$executions$passed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$skipped
          in: query
          description: Filters by 'statistics$executions$skipped'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$total
          in: query
          description: Filters by 'statistics$executions$total'
          schema:
            type: integer
            format: int64
        - name: filter.eq.status
          in: query
          description: Filters by 'status'
          schema:
            type: string
        - name: filter.eq.testCaseHash
          in: query
          description: Filters by 'testCaseHash'
          schema:
            type: integer
            format: int32
        - name: filter.eq.testCaseId
          in: query
          description: Filters by 'testCaseId'
          schema:
            type: string
        - name: filter.eq.ticketId
          in: query
          description: Filters by 'ticketId'
          schema:
            type: string
        - name: filter.eq.type
          in: query
          description: Filters by 'type'
          schema:
            type: string
        - name: filter.eq.uniqueId
          in: query
          description: Filters by 'uniqueId'
          schema:
            type: string
        - name: filter.eq.uuid
          in: query
          description: Filters by 'uuid'
          schema:
            type: string
        - name: filter.eq.value
          in: query
          description: Filters by 'value'
          schema:
            type: string
        - name: params
          in: query
          description: params
          required: true
          schema: {}
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StatisticsResource'
      deprecated: false
  /v1/{projectName}/item/step/attribute/keys:
    get:
      tags:
        - test-item-controller
      summary: Get all unique attribute keys of step items under specified project
      operationId: getAttributeKeysUsingGET_2
      parameters:
        - name: filter.cnt.attributeKey
          in: query
          description: filter.cnt.attributeKey
          required: true
          schema:
            type: string
        - name: filter.eq.name
          in: query
          description: filter.eq.name
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/{projectName}/item/step/attribute/values:
    get:
      tags:
        - test-item-controller
      summary: Get all unique attribute values of step items under specified project
      operationId: getAttributeValuesUsingGET_2
      parameters:
        - name: filter.cnt.attributeValue
          in: query
          description: filter.cnt.attributeValue
          required: true
          schema:
            type: string
        - name: filter.eq.attributeKey
          in: query
          description: filter.eq.attributeKey
          schema:
            type: string
        - name: filter.eq.name
          in: query
          description: filter.eq.name
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/{projectName}/item/suggest/choice:
    put:
      tags:
        - test-item-controller
      summary: Handle user choice from suggested items
      operationId: handleSuggestChooseUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: request
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SuggestInfo'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: request
  /v1/{projectName}/item/suggest/cluster/{clusterId}:
    get:
      tags:
        - test-item-controller
      summary: Search suggested items in analyzer for provided one
      operationId: getSuggestedClusterItemsUsingGET
      parameters:
        - name: clusterId
          in: path
          description: clusterId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuggestedItem'
      deprecated: false
  /v1/{projectName}/item/suggest/{itemId}:
    get:
      tags:
        - test-item-controller
      summary: Search suggested items in analyzer for provided one
      operationId: getSuggestedItemsUsingGET
      parameters:
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuggestedItem'
      deprecated: false
  /v1/{projectName}/item/ticket/ids:
    get:
      tags:
        - test-item-controller
      summary: Get tickets that contains a term as a part inside for specified launch
      operationId: getTicketIdsUsingGET
      parameters:
        - name: launch
          in: query
          description: launch
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: term
          in: query
          description: term
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/{projectName}/item/ticket/ids/all:
    get:
      tags:
        - test-item-controller
      summary: Get tickets that contains a term as a part inside for specified launch
      operationId: getTicketIdsForProjectUsingGET
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: term
          in: query
          description: term
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/{projectName}/item/uuid/{itemId}:
    get:
      tags:
        - test-item-controller
      summary: Find test item by UUID
      operationId: getTestItemByUuidUsingGET
      parameters:
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TestItemResource'
      deprecated: false
  /v1/{projectName}/item/v2:
    get:
      tags:
        - test-item-controller
      summary: Find test items by specified filter
      operationId: getTestItemsV2UsingGET
      parameters:
        - name: filter.eq.attributeKey
          in: query
          description: Filters by 'attributeKey'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.attributeValue
          in: query
          description: Filters by 'attributeValue'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.autoAnalyzed
          in: query
          description: Filters by 'autoAnalyzed'
          schema:
            type: boolean
        - name: filter.eq.clusterId
          in: query
          description: Filters by 'clusterId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.compositeAttribute
          in: query
          description: Filters by 'compositeAttribute'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.eq.description
          in: query
          description: Filters by 'description'
          schema:
            type: string
        - name: filter.eq.duration
          in: query
          description: Filters by 'duration'
          schema:
            type: integer
            format: int64
        - name: filter.eq.endTime
          in: query
          description: Filters by 'endTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.hasChildren
          in: query
          description: Filters by 'hasChildren'
          schema:
            type: boolean
        - name: filter.eq.hasRetries
          in: query
          description: Filters by 'hasRetries'
          schema:
            type: boolean
        - name: filter.eq.hasStats
          in: query
          description: Filters by 'hasStats'
          schema:
            type: boolean
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.ignoreAnalyzer
          in: query
          description: Filters by 'ignoreAnalyzer'
          schema:
            type: boolean
        - name: filter.eq.issueComment
          in: query
          description: Filters by 'issueComment'
          schema:
            type: string
        - name: filter.eq.issueGroupId
          in: query
          description: Filters by 'issueGroupId'
          schema:
            type: integer
            format: int32
        - name: filter.eq.issueId
          in: query
          description: Filters by 'issueId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.issueType
          in: query
          description: Filters by 'issueType'
          schema:
            type: string
        - name: filter.eq.issueTypeId
          in: query
          description: Filters by 'issueTypeId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.key
          in: query
          description: Filters by 'key'
          schema:
            type: string
        - name: filter.eq.lastModified
          in: query
          description: Filters by 'lastModified'
          schema:
            type: string
        - name: filter.eq.launchId
          in: query
          description: Filters by 'launchId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.levelAttribute
          in: query
          description: Filters by 'levelAttribute'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.locator
          in: query
          description: Filters by 'locator'
          schema:
            type: string
        - name: filter.eq.mode
          in: query
          description: Filters by 'mode'
          schema:
            type: string
        - name: filter.eq.name
          in: query
          description: Filters by 'name'
          schema:
            type: string
        - name: filter.eq.parentId
          in: query
          description: Filters by 'parentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.parentId
          in: query
          description: Filters by 'parentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.path
          in: query
          description: Filters by 'path'
          schema:
            type: integer
            format: int64
        - name: filter.eq.patternName
          in: query
          description: Filters by 'patternName'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: object
              properties: {}
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.retryParentId
          in: query
          description: Filters by 'retryParentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.startTime
          in: query
          description: Filters by 'startTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.statistics$defects$automation_bug$ab001
          in: query
          description: Filters by 'statistics$defects$automation_bug$ab001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$no_defect$nd001
          in: query
          description: Filters by 'statistics$defects$no_defect$nd001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$product_bug$pb001
          in: query
          description: Filters by 'statistics$defects$product_bug$pb001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$system_issue$si001
          in: query
          description: Filters by 'statistics$defects$system_issue$si001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$to_investigate$ti001
          in: query
          description: Filters by 'statistics$defects$to_investigate$ti001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$failed
          in: query
          description: Filters by 'statistics$executions$failed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$passed
          in: query
          description: Filters by 'statistics$executions$passed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$skipped
          in: query
          description: Filters by 'statistics$executions$skipped'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$total
          in: query
          description: Filters by 'statistics$executions$total'
          schema:
            type: integer
            format: int64
        - name: filter.eq.status
          in: query
          description: Filters by 'status'
          schema:
            type: string
        - name: filter.eq.testCaseHash
          in: query
          description: Filters by 'testCaseHash'
          schema:
            type: integer
            format: int32
        - name: filter.eq.testCaseId
          in: query
          description: Filters by 'testCaseId'
          schema:
            type: string
        - name: filter.eq.ticketId
          in: query
          description: Filters by 'ticketId'
          schema:
            type: string
        - name: filter.eq.type
          in: query
          description: Filters by 'type'
          schema:
            type: string
        - name: filter.eq.uniqueId
          in: query
          description: Filters by 'uniqueId'
          schema:
            type: string
        - name: filter.eq.uuid
          in: query
          description: Filters by 'uuid'
          schema:
            type: string
        - name: filter.eq.value
          in: query
          description: Filters by 'value'
          schema:
            type: string
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: params
          in: query
          description: params
          required: true
          schema: {}
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«TestItemResource»'
      deprecated: false
  /v1/{projectName}/item/{itemId}:
    get:
      tags:
        - test-item-controller
      summary: Find test item by ID
      operationId: getTestItemUsingGET
      parameters:
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TestItemResource'
      deprecated: false
    delete:
      tags:
        - test-item-controller
      summary: Delete test item
      operationId: deleteTestItemUsingDELETE
      parameters:
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/{projectName}/item/{itemId}/update:
    put:
      tags:
        - test-item-controller
      summary: Update test item
      operationId: updateTestItemUsingPUT
      parameters:
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: rq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTestItemRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: rq
  /v1/{projectName}/item/{parentItem}:
    post:
      tags:
        - test-item-controller
      summary: Start a child test item
      operationId: startChildItemUsingPOST_1
      parameters:
        - name: parentItem
          in: path
          description: parentItem
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: startTestItemRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTestItemRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
      deprecated: false
      x-codegen-request-body-name: startTestItemRQ
  /v1/{projectName}/item/{testItemId}:
    put:
      tags:
        - test-item-controller
      summary: Finish test item
      operationId: finishTestItemUsingPUT_1
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: testItemId
          in: path
          description: testItemId
          required: true
          schema:
            type: string
      requestBody:
        description: finishExecutionRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishTestItemRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: finishExecutionRQ
  /v1/{projectName}/launch:
    get:
      tags:
        - launch-controller
      summary: Get list of project launches by filter
      operationId: getProjectLaunchesUsingGET
      parameters:
        - name: filter.eq.attributeKey
          in: query
          description: Filters by 'attributeKey'
          schema:
            type: string
        - name: filter.eq.attributeValue
          in: query
          description: Filters by 'attributeValue'
          schema:
            type: string
        - name: filter.eq.compositeAttribute
          in: query
          description: Filters by 'compositeAttribute'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.eq.description
          in: query
          description: Filters by 'description'
          schema:
            type: string
        - name: filter.eq.endTime
          in: query
          description: Filters by 'endTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.hasRetries
          in: query
          description: Filters by 'hasRetries'
          schema:
            type: boolean
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.lastModified
          in: query
          description: Filters by 'lastModified'
          schema:
            type: string
            format: date-time
        - name: filter.eq.mode
          in: query
          description: Filters by 'mode'
          schema:
            type: string
        - name: filter.eq.name
          in: query
          description: Filters by 'name'
          schema:
            type: string
        - name: filter.eq.number
          in: query
          description: Filters by 'number'
          schema:
            type: integer
            format: int32
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.startTime
          in: query
          description: Filters by 'startTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.statistics$defects$automation_bug$ab001
          in: query
          description: Filters by 'statistics$defects$automation_bug$ab001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$no_defect$nd001
          in: query
          description: Filters by 'statistics$defects$no_defect$nd001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$product_bug$pb001
          in: query
          description: Filters by 'statistics$defects$product_bug$pb001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$system_issue$si001
          in: query
          description: Filters by 'statistics$defects$system_issue$si001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$to_investigate$ti001
          in: query
          description: Filters by 'statistics$defects$to_investigate$ti001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$failed
          in: query
          description: Filters by 'statistics$executions$failed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$passed
          in: query
          description: Filters by 'statistics$executions$passed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$skipped
          in: query
          description: Filters by 'statistics$executions$skipped'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$total
          in: query
          description: Filters by 'statistics$executions$total'
          schema:
            type: integer
            format: int64
        - name: filter.eq.status
          in: query
          description: Filters by 'status'
          schema:
            type: string
        - name: filter.eq.user
          in: query
          description: Filters by 'user'
          schema:
            type: string
        - name: filter.eq.userId
          in: query
          description: Filters by 'userId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.uuid
          in: query
          description: Filters by 'uuid'
          schema:
            type: string
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«LaunchResource»'
      deprecated: false
    post:
      tags:
        - launch-controller
      summary: Starts launch for specified project
      operationId: startLaunchUsingPOST_1
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: Start launch request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartLaunchRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StartLaunchRS'
      deprecated: false
      x-codegen-request-body-name: startLaunchRQ
    delete:
      tags:
        - launch-controller
      summary: Delete specified launches by ids
      operationId: deleteLaunchesUsingDELETE
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: deleteBulkRQ
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeleteBulkRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeleteBulkRS'
      deprecated: false
      x-codegen-request-body-name: deleteBulkRQ
  /v1/{projectName}/launch/analyze:
    post:
      tags:
        - launch-controller
      summary: Start launch auto-analyzer on demand
      operationId: startLaunchAnalyzerUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: analyzeLaunchRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzeLaunchRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: analyzeLaunchRQ
  /v1/{projectName}/launch/attribute/keys:
    get:
      tags:
        - launch-controller
      summary: Get all unique attribute keys of project launches
      operationId: getAttributeKeysUsingGET
      parameters:
        - name: filter.cnt.attributeKey
          in: query
          description: filter.cnt.attributeKey
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/{projectName}/launch/attribute/values:
    get:
      tags:
        - launch-controller
      summary: Get all unique attribute values of project launches
      operationId: getAttributeValuesUsingGET
      parameters:
        - name: filter.cnt.attributeValue
          in: query
          description: filter.cnt.attributeValue
          required: true
          schema:
            type: string
        - name: filter.eq.attributeKey
          in: query
          description: filter.eq.attributeKey
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/{projectName}/launch/cluster:
    post:
      tags:
        - launch-controller
      summary: Create launch clusters
      operationId: createClustersUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: createClustersRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClustersRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: createClustersRQ
  /v1/{projectName}/launch/cluster/{launchId}:
    get:
      tags:
        - launch-controller
      summary: Get all index clusters of the launch
      operationId: getClustersUsingGET
      parameters:
        - name: launchId
          in: path
          description: launchId
          required: true
          schema:
            type: string
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«ClusterInfoResource»'
      deprecated: false
  /v1/{projectName}/launch/compare:
    get:
      tags:
        - launch-controller
      summary: Compare launches
      operationId: compareLaunchesUsingGET
      parameters:
        - name: ids
          in: query
          description: ids
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/ChartStatisticsContent'
      deprecated: false
  /v1/{projectName}/launch/import:
    post:
      tags:
        - launch-controller
      summary: Import junit xml report
      description: 'Only following formats are supported: zip and xml.'
      operationId: importLaunchUsingPOST
      parameters:
        - name: attributeKey
          in: query
          description: Add Launch attribute key
          schema:
            type: string
        - name: attributeValue
          in: query
          description: Add Launch attribute value
          schema:
            type: string
        - name: description
          in: query
          description: Override Launch Description
          schema:
            type: string
        - name: launchName
          in: query
          description: Override Launch Name
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: skippedIsNotIssue
          in: query
          description: 'true: no defect type is applied to skipped issue'
          schema:
            type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  description: file
                  format: binary
                params:
                  description: params
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/{projectName}/launch/info:
    put:
      tags:
        - launch-controller
      summary: Bulk update attributes and description
      operationId: bulkUpdateUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: bulkInfoUpdateRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkInfoUpdateRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: bulkInfoUpdateRQ
  /v1/{projectName}/launch/latest:
    get:
      tags:
        - launch-controller
      summary: Get list of latest project launches by filter
      operationId: getLatestLaunchesUsingGET
      parameters:
        - name: filter.eq.attributeKey
          in: query
          description: Filters by 'attributeKey'
          schema:
            type: string
        - name: filter.eq.attributeValue
          in: query
          description: Filters by 'attributeValue'
          schema:
            type: string
        - name: filter.eq.compositeAttribute
          in: query
          description: Filters by 'compositeAttribute'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.eq.description
          in: query
          description: Filters by 'description'
          schema:
            type: string
        - name: filter.eq.endTime
          in: query
          description: Filters by 'endTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.hasRetries
          in: query
          description: Filters by 'hasRetries'
          schema:
            type: boolean
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.lastModified
          in: query
          description: Filters by 'lastModified'
          schema:
            type: string
            format: date-time
        - name: filter.eq.mode
          in: query
          description: Filters by 'mode'
          schema:
            type: string
        - name: filter.eq.name
          in: query
          description: Filters by 'name'
          schema:
            type: string
        - name: filter.eq.number
          in: query
          description: Filters by 'number'
          schema:
            type: integer
            format: int32
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.startTime
          in: query
          description: Filters by 'startTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.statistics$defects$automation_bug$ab001
          in: query
          description: Filters by 'statistics$defects$automation_bug$ab001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$no_defect$nd001
          in: query
          description: Filters by 'statistics$defects$no_defect$nd001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$product_bug$pb001
          in: query
          description: Filters by 'statistics$defects$product_bug$pb001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$system_issue$si001
          in: query
          description: Filters by 'statistics$defects$system_issue$si001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$to_investigate$ti001
          in: query
          description: Filters by 'statistics$defects$to_investigate$ti001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$failed
          in: query
          description: Filters by 'statistics$executions$failed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$passed
          in: query
          description: Filters by 'statistics$executions$passed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$skipped
          in: query
          description: Filters by 'statistics$executions$skipped'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$total
          in: query
          description: Filters by 'statistics$executions$total'
          schema:
            type: integer
            format: int64
        - name: filter.eq.status
          in: query
          description: Filters by 'status'
          schema:
            type: string
        - name: filter.eq.user
          in: query
          description: Filters by 'user'
          schema:
            type: string
        - name: filter.eq.userId
          in: query
          description: Filters by 'userId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.uuid
          in: query
          description: Filters by 'uuid'
          schema:
            type: string
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«LaunchResource»'
      deprecated: false
  /v1/{projectName}/launch/merge:
    post:
      tags:
        - launch-controller
      summary: Merge set of specified launches in common one
      operationId: mergeLaunchesUsingPOST_1
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: Merge launches request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeLaunchesRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LaunchResource'
      deprecated: false
      x-codegen-request-body-name: mergeLaunchesRQ
  /v1/{projectName}/launch/mode:
    get:
      tags:
        - launch-controller
      summary: Get launches of specified project from DEBUG mode
      operationId: getDebugLaunchesUsingGET
      parameters:
        - name: filter.eq.attributeKey
          in: query
          description: Filters by 'attributeKey'
          schema:
            type: string
        - name: filter.eq.attributeValue
          in: query
          description: Filters by 'attributeValue'
          schema:
            type: string
        - name: filter.eq.compositeAttribute
          in: query
          description: Filters by 'compositeAttribute'
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.eq.description
          in: query
          description: Filters by 'description'
          schema:
            type: string
        - name: filter.eq.endTime
          in: query
          description: Filters by 'endTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.hasRetries
          in: query
          description: Filters by 'hasRetries'
          schema:
            type: boolean
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.lastModified
          in: query
          description: Filters by 'lastModified'
          schema:
            type: string
            format: date-time
        - name: filter.eq.mode
          in: query
          description: Filters by 'mode'
          schema:
            type: string
        - name: filter.eq.name
          in: query
          description: Filters by 'name'
          schema:
            type: string
        - name: filter.eq.number
          in: query
          description: Filters by 'number'
          schema:
            type: integer
            format: int32
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.startTime
          in: query
          description: Filters by 'startTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.statistics$defects$automation_bug$ab001
          in: query
          description: Filters by 'statistics$defects$automation_bug$ab001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$no_defect$nd001
          in: query
          description: Filters by 'statistics$defects$no_defect$nd001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$product_bug$pb001
          in: query
          description: Filters by 'statistics$defects$product_bug$pb001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$system_issue$si001
          in: query
          description: Filters by 'statistics$defects$system_issue$si001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$defects$to_investigate$ti001
          in: query
          description: Filters by 'statistics$defects$to_investigate$ti001'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$failed
          in: query
          description: Filters by 'statistics$executions$failed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$passed
          in: query
          description: Filters by 'statistics$executions$passed'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$skipped
          in: query
          description: Filters by 'statistics$executions$skipped'
          schema:
            type: integer
            format: int64
        - name: filter.eq.statistics$executions$total
          in: query
          description: Filters by 'statistics$executions$total'
          schema:
            type: integer
            format: int64
        - name: filter.eq.status
          in: query
          description: Filters by 'status'
          schema:
            type: string
        - name: filter.eq.user
          in: query
          description: Filters by 'user'
          schema:
            type: string
        - name: filter.eq.userId
          in: query
          description: Filters by 'userId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.uuid
          in: query
          description: Filters by 'uuid'
          schema:
            type: string
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«LaunchResource»'
      deprecated: false
  /v1/{projectName}/launch/names:
    get:
      tags:
        - launch-controller
      summary: Get launch names of project
      operationId: getAllLaunchNamesUsingGET
      parameters:
        - name: filter.cnt.name
          in: query
          description: filter.cnt.name
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/{projectName}/launch/owners:
    get:
      tags:
        - launch-controller
      summary: Get all unique owners of project launches
      operationId: getAllOwnersUsingGET
      parameters:
        - name: filter.cnt.user
          in: query
          description: filter.cnt.user
          required: true
          schema:
            type: string
        - name: mode
          in: query
          description: mode
          schema:
            type: string
            default: DEFAULT
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
      deprecated: false
  /v1/{projectName}/launch/status:
    get:
      tags:
        - launch-controller
      summary: getStatuses
      operationId: getStatusesUsingGET
      parameters:
        - name: ids
          in: query
          description: ids
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
      deprecated: false
  /v1/{projectName}/launch/stop:
    put:
      tags:
        - launch-controller
      summary: Force finish launch
      operationId: bulkForceFinishUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: rq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRQ«long,FinishExecutionRQ»'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: rq
  /v1/{projectName}/launch/update:
    put:
      tags:
        - launch-controller
      summary: Updates launches for specified project
      operationId: updateLaunchesUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: rq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRQ«long,UpdateLaunchRQ»'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: rq
  /v1/{projectName}/launch/uuid/{launchId}:
    get:
      tags:
        - launch-controller
      summary: Get specified launch by UUID
      operationId: getLaunchByUuidUsingGET
      parameters:
        - name: launchId
          in: path
          description: launchId
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LaunchResource'
      deprecated: false
  /v1/{projectName}/launch/{launchId}:
    get:
      tags:
        - launch-controller
      summary: Get specified launch by ID
      operationId: getLaunchUsingGET
      parameters:
        - name: launchId
          in: path
          description: launchId
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LaunchResource'
      deprecated: false
    delete:
      tags:
        - launch-controller
      summary: Delete specified launch by ID
      operationId: deleteLaunchUsingDELETE
      parameters:
        - name: launchId
          in: path
          description: launchId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/{projectName}/launch/{launchId}/finish:
    put:
      tags:
        - launch-controller
      summary: Finish launch for specified project
      operationId: finishLaunchUsingPUT_1
      parameters:
        - name: launchId
          in: path
          description: launchId
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: finishLaunchRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishExecutionRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FinishLaunchRS'
      deprecated: false
      x-codegen-request-body-name: finishLaunchRQ
  /v1/{projectName}/launch/{launchId}/report:
    get:
      tags:
        - launch-controller
      summary: Export specified launch
      description: 'Only following formats are supported: pdf (by default), xls, html.'
      operationId: getLaunchReportUsingGET
      parameters:
        - name: launchId
          in: path
          description: launchId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: view
          in: query
          description: view
          allowEmptyValue: false
          schema:
            type: string
            default: pdf
            enum:
              - pdf
              - xls
              - html
      responses:
        '200':
          description: OK
          content: {}
      deprecated: false
  /v1/{projectName}/launch/{launchId}/stop:
    put:
      tags:
        - launch-controller
      summary: Force finish launch for specified project
      operationId: forceFinishLaunchUsingPUT
      parameters:
        - name: launchId
          in: path
          description: launchId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: finishExecutionRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishExecutionRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: finishExecutionRQ
  /v1/{projectName}/launch/{launchId}/update:
    put:
      tags:
        - launch-controller
      summary: Updates launch for specified project
      operationId: updateLaunchUsingPUT
      parameters:
        - name: launchId
          in: path
          description: launchId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: updateLaunchRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLaunchRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: updateLaunchRQ
  /v1/{projectName}/log:
    get:
      tags:
        - log-controller
      summary: Get logs by filter
      operationId: getLogsUsingGET
      parameters:
        - name: filter.eq.autoAnalyzed
          in: query
          description: Filters by 'autoAnalyzed'
          schema:
            type: boolean
        - name: filter.eq.binaryContent
          in: query
          description: Filters by 'binaryContent'
          schema:
            type: string
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.item
          in: query
          description: Filters by 'item'
          schema:
            type: integer
            format: int64
        - name: filter.eq.lastModified
          in: query
          description: Filters by 'lastModified'
          schema:
            type: string
            format: date-time
        - name: filter.eq.launch
          in: query
          description: Filters by 'launch'
          schema:
            type: integer
            format: int64
        - name: filter.eq.launchId
          in: query
          description: Filters by 'launchId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.level
          in: query
          description: Filters by 'level'
          schema:
            type: string
        - name: filter.eq.logId
          in: query
          description: Filters by 'logId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.logTime
          in: query
          description: Filters by 'logTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.message
          in: query
          description: Filters by 'message'
          schema:
            type: string
        - name: filter.eq.path
          in: query
          description: Filters by 'path'
          schema:
            type: string
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.retryParentId
          in: query
          description: Filters by 'retryParentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.retryParentLaunchId
          in: query
          description: Filters by 'retryParentLaunchId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.status
          in: query
          description: Filters by 'status'
          schema:
            type: string
        - name: filter.under.path
          in: query
          description: filter.under.path
          schema:
            type: string
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«LogResource»'
      deprecated: false
    post:
      tags:
        - log-controller
      summary: Create log (batching operation)
      operationId: createLogUsingPOST_1
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - json_request_part
              type: object
              properties:
                json_request_part:
                  description: json_request_part
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BatchSaveOperatingRS'
      deprecated: false
  /v1/{projectName}/log/entry:
    post:
      tags:
        - log-controller
      summary: Create log
      operationId: createLogEntryUsingPOST_1
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: createLogRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveLogRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
      deprecated: false
      x-codegen-request-body-name: createLogRQ
  /v1/{projectName}/log/locations/{parentId}:
    get:
      tags:
        - log-controller
      summary: Get next or previous log in test item
      operationId: getErrorPageUsingGET
      parameters:
        - name: filter.eq.autoAnalyzed
          in: query
          description: Filters by 'autoAnalyzed'
          schema:
            type: boolean
        - name: filter.eq.binaryContent
          in: query
          description: Filters by 'binaryContent'
          schema:
            type: string
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.item
          in: query
          description: Filters by 'item'
          schema:
            type: integer
            format: int64
        - name: filter.eq.lastModified
          in: query
          description: Filters by 'lastModified'
          schema:
            type: string
            format: date-time
        - name: filter.eq.launch
          in: query
          description: Filters by 'launch'
          schema:
            type: integer
            format: int64
        - name: filter.eq.launchId
          in: query
          description: Filters by 'launchId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.level
          in: query
          description: Filters by 'level'
          schema:
            type: string
        - name: filter.eq.logId
          in: query
          description: Filters by 'logId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.logTime
          in: query
          description: Filters by 'logTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.message
          in: query
          description: Filters by 'message'
          schema:
            type: string
        - name: filter.eq.path
          in: query
          description: Filters by 'path'
          schema:
            type: string
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.retryParentId
          in: query
          description: Filters by 'retryParentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.retryParentLaunchId
          in: query
          description: Filters by 'retryParentLaunchId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.status
          in: query
          description: Filters by 'status'
          schema:
            type: string
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: params
          in: query
          description: params
          required: true
          schema: {}
        - name: parentId
          in: path
          description: parentId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PagedLogResource'
      deprecated: false
  /v1/{projectName}/log/nested/{parentId}:
    get:
      tags:
        - log-controller
      summary: Get nested steps with logs for the parent Test Item
      operationId: getNestedItemsUsingGET
      parameters:
        - name: filter.eq.autoAnalyzed
          in: query
          description: Filters by 'autoAnalyzed'
          schema:
            type: boolean
        - name: filter.eq.binaryContent
          in: query
          description: Filters by 'binaryContent'
          schema:
            type: string
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.item
          in: query
          description: Filters by 'item'
          schema:
            type: integer
            format: int64
        - name: filter.eq.lastModified
          in: query
          description: Filters by 'lastModified'
          schema:
            type: string
            format: date-time
        - name: filter.eq.launch
          in: query
          description: Filters by 'launch'
          schema:
            type: integer
            format: int64
        - name: filter.eq.launchId
          in: query
          description: Filters by 'launchId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.level
          in: query
          description: Filters by 'level'
          schema:
            type: string
        - name: filter.eq.logId
          in: query
          description: Filters by 'logId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.logTime
          in: query
          description: Filters by 'logTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.message
          in: query
          description: Filters by 'message'
          schema:
            type: string
        - name: filter.eq.path
          in: query
          description: Filters by 'path'
          schema:
            type: string
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.retryParentId
          in: query
          description: Filters by 'retryParentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.retryParentLaunchId
          in: query
          description: Filters by 'retryParentLaunchId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.status
          in: query
          description: Filters by 'status'
          schema:
            type: string
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: params
          in: query
          description: params
          allowEmptyValue: false
          schema: {}
        - name: parentId
          in: path
          description: parentId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«object»'
      deprecated: false
  /v1/{projectName}/log/search/{itemId}:
    post:
      tags:
        - log-controller
      summary: Search test items with similar error logs
      operationId: searchLogsUsingPOST
      parameters:
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchLogRq'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«SearchLogRs»'
      deprecated: false
      x-codegen-request-body-name: request
  /v1/{projectName}/log/under:
    post:
      tags:
        - log-controller
      summary: Get logs under items
      operationId: getLogsUnderUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: logsUnderRq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLogsUnderRq'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/LogResource'
      deprecated: false
      x-codegen-request-body-name: logsUnderRq
  /v1/{projectName}/log/uuid/{logId}:
    get:
      tags:
        - log-controller
      summary: Get log by UUID
      operationId: getLogByUuidUsingGET
      parameters:
        - name: logId
          in: path
          description: logId
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LogResource'
      deprecated: false
  /v1/{projectName}/log/{logId}:
    get:
      tags:
        - log-controller
      summary: Get log by ID
      operationId: getLogUsingGET
      parameters:
        - name: logId
          in: path
          description: logId
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LogResource'
      deprecated: false
    delete:
      tags:
        - log-controller
      summary: Delete log
      operationId: deleteLogUsingDELETE
      parameters:
        - name: logId
          in: path
          description: logId
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/{projectName}/log/{logId}/page:
    get:
      tags:
        - log-controller
      summary: Get logs by filter
      operationId: getPageNumberUsingGET
      parameters:
        - name: filter.eq.autoAnalyzed
          in: query
          description: Filters by 'autoAnalyzed'
          schema:
            type: boolean
        - name: filter.eq.binaryContent
          in: query
          description: Filters by 'binaryContent'
          schema:
            type: string
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.item
          in: query
          description: Filters by 'item'
          schema:
            type: integer
            format: int64
        - name: filter.eq.lastModified
          in: query
          description: Filters by 'lastModified'
          schema:
            type: string
            format: date-time
        - name: filter.eq.launch
          in: query
          description: Filters by 'launch'
          schema:
            type: integer
            format: int64
        - name: filter.eq.launchId
          in: query
          description: Filters by 'launchId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.level
          in: query
          description: Filters by 'level'
          schema:
            type: string
        - name: filter.eq.logId
          in: query
          description: Filters by 'logId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.logTime
          in: query
          description: Filters by 'logTime'
          schema:
            type: string
            format: date-time
        - name: filter.eq.message
          in: query
          description: Filters by 'message'
          schema:
            type: string
        - name: filter.eq.path
          in: query
          description: Filters by 'path'
          schema:
            type: string
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.retryParentId
          in: query
          description: Filters by 'retryParentId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.retryParentLaunchId
          in: query
          description: Filters by 'retryParentLaunchId'
          schema:
            type: integer
            format: int64
        - name: filter.eq.status
          in: query
          description: Filters by 'status'
          schema:
            type: string
        - name: logId
          in: path
          description: logId
          required: true
          schema:
            type: integer
            format: int64
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Serializable'
      deprecated: false
  /v1/{projectName}/settings:
    get:
      tags:
        - project-settings-controller
      summary: Get project specific issue sub-types
      description: Only for users that are assigned to the project
      operationId: getProjectSettingsUsingGET
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectSettingsResource'
      deprecated: false
  /v1/{projectName}/settings/pattern:
    post:
      tags:
        - project-settings-controller
      summary: Create pattern template for items' log messages pattern analysis
      operationId: createPatternTemplateUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: createPatternTemplateRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatternTemplateRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
      deprecated: false
      x-codegen-request-body-name: createPatternTemplateRQ
  /v1/{projectName}/settings/pattern/{id}:
    put:
      tags:
        - project-settings-controller
      summary: Update pattern template for items' log messages pattern analysis
      operationId: updatePatternTemplateUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: updatePatternTemplateRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePatternTemplateRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: updatePatternTemplateRQ
    delete:
      tags:
        - project-settings-controller
      summary: Delete pattern template for items' log messages pattern analysis
      operationId: deletePatternTemplateUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/{projectName}/settings/sub-type:
    put:
      tags:
        - project-settings-controller
      summary: Update of custom project specific issue sub-type
      operationId: updateProjectIssueSubTypeUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIssueSubTypeRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: request
    post:
      tags:
        - project-settings-controller
      summary: Creation of custom project specific issue sub-type
      operationId: createProjectIssueSubTypeUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIssueSubTypeRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IssueSubTypeCreatedRS'
      deprecated: false
      x-codegen-request-body-name: request
  /v1/{projectName}/settings/sub-type/{id}:
    delete:
      tags:
        - project-settings-controller
      summary: Delete custom project specific issue sub-type
      operationId: deleteProjectIssueSubTypeUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
  /v1/{projectName}/widget:
    post:
      tags:
        - widget-controller
      summary: Create a new widget
      operationId: createWidgetUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: createWidget
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedRS'
      deprecated: false
      x-codegen-request-body-name: createWidget
  /v1/{projectName}/widget/multilevel/{widgetId}:
    get:
      tags:
        - widget-controller
      summary: Get multilevel widget by ID
      operationId: getWidgetUsingGET
      parameters:
        - name: attributes
          in: query
          description: attributes
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: params
          in: query
          description: params
          required: true
          schema: {}
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: widgetId
          in: path
          description: widgetId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WidgetResource'
      deprecated: false
  /v1/{projectName}/widget/names/all:
    get:
      tags:
        - widget-controller
      summary: Load all widget names which belong to a user
      operationId: getWidgetNamesUsingGET
      parameters:
        - name: filter.eq.description
          in: query
          description: Filters by 'description'
          schema:
            type: string
        - name: filter.eq.id
          in: query
          description: Filters by 'id'
          schema:
            type: integer
            format: int64
        - name: filter.eq.name
          in: query
          description: Filters by 'name'
          schema:
            type: string
        - name: filter.eq.owner
          in: query
          description: Filters by 'owner'
          schema:
            type: string
        - name: filter.eq.projectId
          in: query
          description: Filters by 'projectId'
          schema:
            type: integer
            format: int64
        - name: page.page
          in: query
          description: Results page you want to retrieve (0..N)
          schema:
            type: integer
            format: int32
        - name: page.size
          in: query
          description: Number of records per page
          schema:
            type: integer
            format: int32
        - name: page.sort
          in: query
          description: "Sorting criteria in the format: property, (asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable«object»'
      deprecated: false
  /v1/{projectName}/widget/preview:
    post:
      tags:
        - widget-controller
      summary: Get widget preview
      operationId: getWidgetPreviewUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: previewRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetPreviewRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
      deprecated: false
      x-codegen-request-body-name: previewRQ
  /v1/{projectName}/widget/{widgetId}:
    get:
      tags:
        - widget-controller
      summary: Get widget by ID
      operationId: getWidgetUsingGET_1
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: widgetId
          in: path
          description: widgetId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WidgetResource'
      deprecated: false
    put:
      tags:
        - widget-controller
      summary: Update specified widget
      operationId: updateWidgetUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: widgetId
          in: path
          description: widgetId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: updateRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: updateRQ
  /v2/{projectName}/item:
    post:
      tags:
        - test-item-async-controller
      summary: Start a root test item
      operationId: startRootItemUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: startTestItemRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTestItemRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
      deprecated: false
      x-codegen-request-body-name: startTestItemRQ
  /v2/{projectName}/item/{parentItem}:
    post:
      tags:
        - test-item-async-controller
      summary: Start a child test item
      operationId: startChildItemUsingPOST
      parameters:
        - name: parentItem
          in: path
          description: parentItem
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: startTestItemRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTestItemRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
      deprecated: false
      x-codegen-request-body-name: startTestItemRQ
  /v2/{projectName}/item/{testItemId}:
    put:
      tags:
        - test-item-async-controller
      summary: Finish test item
      operationId: finishTestItemUsingPUT
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
        - name: testItemId
          in: path
          description: testItemId
          required: true
          schema:
            type: string
      requestBody:
        description: finishExecutionRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishTestItemRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationCompletionRS'
      deprecated: false
      x-codegen-request-body-name: finishExecutionRQ
  /v2/{projectName}/launch:
    post:
      tags:
        - launch-async-controller
      summary: Starts launch for specified project
      operationId: startLaunchUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: Start launch request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartLaunchRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StartLaunchRS'
      deprecated: false
      x-codegen-request-body-name: startLaunchRQ
  /v2/{projectName}/launch/merge:
    post:
      tags:
        - launch-async-controller
      summary: Merge set of specified launches in common one
      operationId: mergeLaunchesUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: Merge launches request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeLaunchesRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LaunchResource'
      deprecated: false
      x-codegen-request-body-name: mergeLaunchesRQ
  /v2/{projectName}/launch/{launchId}/finish:
    put:
      tags:
        - launch-async-controller
      summary: Finish launch for specified project
      operationId: finishLaunchUsingPUT
      parameters:
        - name: launchId
          in: path
          description: launchId
          required: true
          schema:
            type: string
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: finishLaunchRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishExecutionRQ'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FinishLaunchRS'
      deprecated: false
      x-codegen-request-body-name: finishLaunchRQ
  /v2/{projectName}/log:
    post:
      tags:
        - log-async-controller
      summary: Create log (batching operation)
      operationId: createLogUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - json_request_part
              type: object
              properties:
                json_request_part:
                  description: json_request_part
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BatchSaveOperatingRS'
      deprecated: false
  /v2/{projectName}/log/entry:
    post:
      tags:
        - log-async-controller
      summary: Create log
      operationId: createLogEntryUsingPOST
      parameters:
        - name: projectName
          in: path
          description: projectName
          required: true
          schema:
            type: string
      requestBody:
        description: createLogRQ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveLogRQ'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntryCreatedAsyncRS'
      deprecated: false
      x-codegen-request-body-name: createLogRQ
components:
  schemas:
    ActivityEventResource:
      title: ActivityEventResource
      required:
        - event_name
        - id
        - object_id
        - object_name
        - object_type
        - project_id
        - project_name
        - subject_name
        - subject_type
      type: object
      properties:
        created_at:
          type: string
          example: yyyy-MM-dd'T'HH:mm:ssZ
        details:
          type: object
          properties: {}
        event_name:
          type: string
        id:
          type: integer
          format: int64
        object_id:
          type: integer
          format: int64
        object_name:
          type: string
        object_type:
          type: string
        project_id:
          type: integer
          format: int64
        project_name:
          type: string
        subject_name:
          type: string
        subject_type:
          type: string
    ActivityResource:
      title: ActivityResource
      required:
        - actionType
        - id
        - lastModified
        - loggedObjectId
        - objectType
        - projectId
        - user
      type: object
      properties:
        actionType:
          type: string
        details:
          type: object
          properties: {}
        id:
          type: integer
          format: int64
        lastModified:
          type: string
          format: date-time
        loggedObjectId:
          type: integer
          format: int64
        objectName:
          type: string
        objectType:
          type: string
        projectId:
          type: integer
          format: int64
        projectName:
          type: string
        user:
          type: string
    AddWidgetRq:
      title: AddWidgetRq
      type: object
      properties:
        addWidget:
          $ref: '#/components/schemas/WidgetObjectModel'
    AllowedValue:
      title: AllowedValue
      type: object
      properties:
        valueId:
          type: string
        valueName:
          type: string
    AnalyticsResource:
      title: AnalyticsResource
      type: object
      properties:
        enabled:
          type: boolean
        type:
          type: string
    AnalyzeLaunchRQ:
      title: AnalyzeLaunchRQ
      type: object
      properties:
        analyzeItemsMode:
          type: array
          items:
            type: string
            enum:
              - TO_INVESTIGATE
              - AUTO_ANALYZED
              - MANUALLY_ANALYZED
        analyzerMode:
          type: string
          enum:
            - ALL
            - LAUNCH_NAME
            - CURRENT_LAUNCH
        analyzerTypeName:
          type: string
          enum:
            - autoAnalyzer
            - patternAnalyzer
        launchId:
          type: integer
          format: int64
    ApiKeyRQ:
      title: ApiKeyRQ
      required:
        - name
      type: object
      properties:
        name:
          type: string
    ApiKeyRS:
      title: ApiKeyRS
      required:
        - id
        - name
        - user_id
      type: object
      properties:
        api_key:
          type: string
        created_at:
          type: string
          example: yyyy-MM-dd'T'HH:mm:ssZ
        id:
          type: integer
          format: int64
        last_used_at:
          type: string
          example: yyyy-MM-dd
        name:
          type: string
        user_id:
          type: integer
          format: int64
    ApiKeysRS:
      title: ApiKeysRS
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ApiKeyRS'
    AssignUsersRQ:
      title: AssignUsersRQ
      required:
        - userNames
      type: object
      properties:
        userNames:
          type: object
          additionalProperties:
            type: string
    AssignedProject:
      title: AssignedProject
      type: object
      properties:
        entryType:
          type: string
        projectRole:
          type: string
    BatchElementCreatedRS:
      title: BatchElementCreatedRS
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        stackTrace:
          type: string
    BatchSaveOperatingRS:
      title: BatchSaveOperatingRS
      type: object
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/BatchElementCreatedRS'
    BinaryContent:
      title: BinaryContent
      required:
        - contentType
        - id
        - thumbnailId
      type: object
      properties:
        contentType:
          type: string
        id:
          type: string
        thumbnailId:
          type: string
    BulkInfoUpdateRQ:
      title: BulkInfoUpdateRQ
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/UpdateItemAttributeRQ'
        description:
          $ref: '#/components/schemas/Description'
        ids:
          type: array
          items:
            type: integer
            format: int64
    BulkRQ«long,FinishExecutionRQ»:
      title: 'BulkRQ«long,FinishExecutionRQ»'
      required:
        - entities
      type: object
      properties:
        entities:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FinishExecutionRQ'
    BulkRQ«long,UpdateLaunchRQ»:
      title: 'BulkRQ«long,UpdateLaunchRQ»'
      required:
        - entities
      type: object
      properties:
        entities:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UpdateLaunchRQ'
    BulkUpdateFilterRQ:
      title: BulkUpdateFilterRQ
      required:
        - conditions
        - name
        - orders
        - type
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/UserFilterCondition'
        description:
          type: string
        id:
          type: string
        name:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        type:
          type: string
          enum:
            - launch
            - testitem
            - log
    ChangePasswordRQ:
      title: ChangePasswordRQ
      type: object
      properties:
        newPassword:
          type: string
        oldPassword:
          type: string
    ChartStatisticsContent:
      title: ChartStatisticsContent
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        number:
          type: integer
          format: int32
        startTime:
          $ref: '#/components/schemas/Timestamp'
        values:
          type: object
          additionalProperties:
            type: string
    ClusterInfoResource:
      title: ClusterInfoResource
      type: object
      properties:
        id:
          type: integer
          format: int64
        index:
          type: integer
          format: int64
        launchId:
          type: integer
          format: int64
        message:
          type: string
        metadata:
          type: object
          properties: {}
    CollectionsRQ«BulkUpdateFilterRQ»:
      title: CollectionsRQ«BulkUpdateFilterRQ»
      required:
        - elements
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/BulkUpdateFilterRQ'
    ContentParameters:
      title: ContentParameters
      required:
        - contentFields
        - itemsCount
      type: object
      properties:
        contentFields:
          type: array
          items:
            type: string
        itemsCount:
          type: integer
          format: int32
        widgetOptions:
          type: object
          properties: {}
    CreateClustersRQ:
      title: CreateClustersRQ
      required:
        - launchId
      type: object
      properties:
        launchId:
          type: integer
          format: int64
        removeNumbers:
          type: boolean
    CreateDashboardRQ:
      title: CreateDashboardRQ
      required:
        - name
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    CreateIssueSubTypeRQ:
      title: CreateIssueSubTypeRQ
      required:
        - color
        - longName
        - shortName
        - typeRef
      type: object
      properties:
        color:
          type: string
        longName:
          type: string
        shortName:
          type: string
        typeRef:
          type: string
    CreatePatternTemplateRQ:
      title: CreatePatternTemplateRQ
      type: object
      properties:
        enabled:
          type: boolean
        name:
          type: string
        type:
          type: string
        value:
          type: string
    CreateProjectRQ:
      title: CreateProjectRQ
      required:
        - entryType
        - projectName
      type: object
      properties:
        entryType:
          type: string
          enum:
            - INTERNAL
        projectName:
          type: string
    CreateUserBidRS:
      title: CreateUserBidRS
      type: object
      properties:
        backLink:
          type: string
        bid:
          type: string
        message:
          type: string
    CreateUserRQ:
      title: CreateUserRQ
      required:
        - defaultProject
        - email
        - role
      type: object
      properties:
        defaultProject:
          type: string
        email:
          type: string
        role:
          type: string
    CreateUserRQConfirm:
      title: CreateUserRQConfirm
      required:
        - email
        - fullName
        - login
        - password
      type: object
      properties:
        email:
          type: string
        fullName:
          type: string
        login:
          type: string
        password:
          type: string
    CreateUserRQFull:
      title: CreateUserRQFull
      required:
        - accountRole
        - defaultProject
        - email
        - fullName
        - login
        - password
        - projectRole
      type: object
      properties:
        accountRole:
          type: string
          enum:
            - USER
            - ADMINISTRATOR
        defaultProject:
          type: string
        email:
          type: string
        fullName:
          type: string
        login:
          type: string
        password:
          type: string
        projectRole:
          type: string
          enum:
            - CUSTOMER
            - MEMBER
            - LEAD
            - PROJECT_MANAGER
    CreateUserRS:
      title: CreateUserRS
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
        warning:
          type: string
    DashboardResource:
      title: DashboardResource
      required:
        - id
        - name
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        owner:
          type: string
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/WidgetObjectModel'
    DefineIssueRQ:
      title: DefineIssueRQ
      required:
        - issues
      type: object
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/IssueDefinition'
    DeleteBulkRQ:
      title: DeleteBulkRQ
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int64
    DeleteBulkRS:
      title: DeleteBulkRS
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorRS'
        notFound:
          type: array
          items:
            type: integer
            format: int64
        successfullyDeleted:
          type: array
          items:
            type: integer
            format: int64
    DemoDataRq:
      title: DemoDataRq
      type: object
      properties:
        createDashboard:
          type: boolean
    DemoDataRs:
      title: DemoDataRs
      type: object
      properties:
        dashboardId:
          type: integer
          format: int64
        launchIds:
          type: array
          items:
            type: integer
            format: int64
    Description:
      title: Description
      type: object
      properties:
        action:
          type: string
          enum:
            - DELETE
            - UPDATE
            - CREATE
        comment:
          type: string
    EditUserRQ:
      title: EditUserRQ
      type: object
      properties:
        email:
          type: string
        fullName:
          type: string
        role:
          type: string
    EntryCreatedAsyncRS:
      title: EntryCreatedAsyncRS
      type: object
      properties:
        id:
          type: string
    EntryCreatedRS:
      title: EntryCreatedRS
      type: object
      properties:
        id:
          type: integer
          format: int64
    Entry«long,int»:
      title: 'Entry«long,int»'
      type: object
      properties:
        key:
          type: integer
          format: int64
        value:
          type: integer
          format: int32
    ErrorRS:
      title: ErrorRS
      type: object
      properties:
        errorCode:
          type: string
          enum:
            - ADDRESS_LOCKED
            - ACCESS_DENIED
            - INCORRECT_REQUEST
            - BINARY_DATA_CANNOT_BE_SAVED
            - PROJECT_NOT_FOUND
            - LAUNCH_NOT_FOUND
            - TEST_SUITE_NOT_FOUND
            - TEST_ITEM_NOT_FOUND
            - LOG_NOT_FOUND
            - ROLE_NOT_FOUND
            - USER_NOT_FOUND
            - WIDGET_NOT_FOUND
            - WIDGET_NOT_FOUND_IN_DASHBOARD
            - DASHBOARD_NOT_FOUND
            - USER_FILTER_NOT_FOUND
            - ACTIVITY_NOT_FOUND
            - UNABLE_TO_CREATE_WIDGET
            - INTEGRATION_NOT_FOUND
            - PROJECT_NOT_CONFIGURED
            - SERVER_SETTINGS_NOT_FOUND
            - ISSUE_TYPE_NOT_FOUND
            - PROJECT_SETTINGS_NOT_FOUND
            - TICKET_NOT_FOUND
            - AUTH_INTEGRATION_NOT_FOUND
            - WIDGET_NOT_FOUND_IN_PROJECT
            - USER_FILTER_NOT_FOUND_IN_PROJECT
            - DASHBOARD_NOT_FOUND_IN_PROJECT
            - PATTERN_TEMPLATE_NOT_FOUND_IN_PROJECT
            - TEST_ITEM_OR_LAUNCH_NOT_FOUND
            - ANALYZER_NOT_FOUND
            - ATTACHMENT_NOT_FOUND
            - UNABLE_TO_LOAD_BINARY_DATA
            - CLUSTER_NOT_FOUND
            - INCORRECT_FILTER_PARAMETERS
            - INCORRECT_SORTING_PARAMETERS
            - INCORRECT_INTEGRATION_NAME
            - UNABLE_MODIFY_SHARABLE_RESOURCE
            - INCORRECT_AUTHENTICATION_TYPE
            - UNABLE_POST_TICKET
            - UNABLE_INTERACT_WITH_INTEGRATION
            - UNABLE_ASSIGN_UNASSIGN_USER_TO_PROJECT
            - EMAIL_CONFIGURATION_IS_INCORRECT
            - PROJECT_UPDATE_NOT_ALLOWED
            - UNABLE_TO_UPDATE_YOURSELF_ROLE
            - FORBIDDEN_OPERATION
            - RESOURCE_ALREADY_EXISTS
            - ROLE_ALREADY_EXISTS_ERROR
            - USER_ALREADY_EXISTS
            - USER_FILTER_ALREADY_EXISTS
            - PROJECT_ALREADY_EXISTS
            - DASHBOARD_UPDATE_ERROR
            - UNABLE_LOAD_WIDGET_CONTENT
            - UNABLE_ADD_TO_FAVORITE
            - INTEGRATION_ALREADY_EXISTS
            - SERVER_SETTINGS_ALREADY_EXISTS
            - UNABLE_REMOVE_FROM_FAVORITE
            - LAUNCH_IS_NOT_FINISHED
            - TEST_ITEM_IS_NOT_FINISHED
            - INCORRECT_FINISH_STATUS
            - BAD_REQUEST_ERROR
            - BAD_SAVE_LOG_REQUEST
            - REPORTING_ITEM_ALREADY_FINISHED
            - AMBIGUOUS_TEST_ITEM_STATUS
            - FAILED_TEST_ITEM_ISSUE_TYPE_DEFINITION
            - FINISH_TIME_EARLIER_THAN_START_TIME
            - FINISH_ITEM_NOT_ALLOWED
            - FINISH_LAUNCH_NOT_ALLOWED
            - START_ITEM_NOT_ALLOWED
            - CHILD_START_TIME_EARLIER_THAN_PARENT
            - UNSUPPORTED_TEST_ITEM_TYPE
            - LOGGING_IS_NOT_ALLOWED
            - BAD_SAVE_WIDGET_REQUEST
            - BAD_UPDATE_WIDGET_REQUEST
            - UNABLE_LOAD_TEST_ITEM_HISTORY
            - BAD_SAVE_USER_FILTER_REQUEST
            - RETRIES_HANDLER_ERROR
            - IMPORT_FILE_ERROR
            - PARSING_XML_ERROR
            - OBJECT_RETRIEVAL_ERROR
            - PLUGIN_UPLOAD_ERROR
            - PLUGIN_REMOVE_ERROR
            - UNABLE_TO_SAVE_CHILD_ITEM_FOR_THE_RETRY
            - PATTERN_ANALYSIS_ERROR
            - PROJECT_DOESNT_CONTAIN_USER
            - UNCLASSIFIED_REPORT_PORTAL_ERROR
            - BAD_UPDATE_PREFERENCE_REQUEST
            - UNSUPPORTED_MERGE_STRATEGY_TYPE
            - DEMO_DATA_GENERATION_ERROR
            - UNCLASSIFIED_ERROR
        message:
          type: string
        stackTrace:
          type: string
    ExternalSystemIssue:
      title: ExternalSystemIssue
      type: object
      properties:
        btsProject:
          type: string
        btsUrl:
          type: string
        pluginName:
          type: string
        submitDate:
          type: integer
          format: int64
        ticketId:
          type: string
        url:
          type: string
    File:
      title: File
      type: object
      properties:
        name:
          type: string
    FinishExecutionRQ:
      title: FinishExecutionRQ
      required:
        - endTime
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ItemAttributesRQ'
        description:
          type: string
        endTime:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - PASSED
            - FAILED
            - STOPPED
            - SKIPPED
            - INTERRUPTED
            - CANCELLED
            - INFO
            - WARN
    FinishLaunchRS:
      title: FinishLaunchRS
      type: object
      properties:
        id:
          type: string
        link:
          type: string
        number:
          type: integer
          format: int64
    FinishTestItemRQ:
      title: FinishTestItemRQ
      required:
        - endTime
        - launchUuid
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ItemAttributesRQ'
        description:
          type: string
        endTime:
          type: string
          format: date-time
        issue:
          $ref: '#/components/schemas/Issue'
        launchUuid:
          type: string
        retry:
          type: boolean
        retryOf:
          type: string
        status:
          type: string
          enum:
            - PASSED
            - FAILED
            - STOPPED
            - SKIPPED
            - INTERRUPTED
            - CANCELLED
            - INFO
            - WARN
        testCaseId:
          type: string
    GetLogsUnderRq:
      title: GetLogsUnderRq
      type: object
      properties:
        itemIds:
          type: array
          items:
            type: integer
            format: int64
        logLevel:
          type: string
          enum:
            - error
            - warn
            - info
            - debug
            - trace
            - fatal
            - unknown
    IntegrationRQ:
      title: IntegrationRQ
      type: object
      properties:
        enabled:
          type: boolean
        integrationParameters:
          type: object
          properties: {}
        name:
          type: string
    IntegrationResource:
      title: IntegrationResource
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        creator:
          type: string
        enabled:
          type: boolean
        id:
          type: integer
          format: int64
        integrationParameters:
          type: object
          properties: {}
        integrationType:
          $ref: '#/components/schemas/IntegrationTypeResource'
        name:
          type: string
        projectId:
          type: integer
          format: int64
    IntegrationTypeResource:
      title: IntegrationTypeResource
      type: object
      properties:
        authFlow:
          type: string
          enum:
            - OAUTH
            - BASIC
            - TOKEN
            - FORM
            - LDAP
        creationDate:
          type: string
          format: date-time
        details:
          type: object
          properties: {}
        enabled:
          type: boolean
        groupType:
          type: string
        name:
          type: string
        type:
          type: integer
          format: int64
    Issue:
      title: Issue
      required:
        - issueType
      type: object
      properties:
        autoAnalyzed:
          type: boolean
        comment:
          type: string
        externalSystemIssues:
          type: array
          items:
            $ref: '#/components/schemas/ExternalSystemIssue'
        ignoreAnalyzer:
          type: boolean
        issueType:
          type: string
    IssueDefinition:
      title: IssueDefinition
      required:
        - issue
        - testItemId
      type: object
      properties:
        issue:
          $ref: '#/components/schemas/Issue'
        testItemId:
          type: integer
          format: int64
    IssueSubTypeCreatedRS:
      title: IssueSubTypeCreatedRS
      type: object
      properties:
        id:
          type: integer
          format: int64
        locator:
          type: string
    IssueSubTypeResource:
      title: IssueSubTypeResource
      type: object
      properties:
        color:
          type: string
        id:
          type: integer
          format: int64
        locator:
          type: string
        longName:
          type: string
        shortName:
          type: string
        typeRef:
          type: string
    ItemAttributeResource:
      title: ItemAttributeResource
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ItemAttributesRQ:
      title: ItemAttributesRQ
      type: object
      properties:
        key:
          type: string
        system:
          type: boolean
          example: false
        value:
          type: string
    ItemPathName:
      title: ItemPathName
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Iterable«ActivityResource»:
      title: Iterable«ActivityResource»
      type: object
    Iterable«ClusterInfoResource»:
      title: Iterable«ClusterInfoResource»
      type: object
    Iterable«DashboardResource»:
      title: Iterable«DashboardResource»
      type: object
    Iterable«LaunchResource»:
      title: Iterable«LaunchResource»
      type: object
    Iterable«LogResource»:
      title: Iterable«LogResource»
      type: object
    Iterable«OwnedEntityResource»:
      title: Iterable«OwnedEntityResource»
      type: object
    Iterable«ProjectInfoResource»:
      title: Iterable«ProjectInfoResource»
      type: object
    Iterable«SearchLogRs»:
      title: Iterable«SearchLogRs»
      type: object
    Iterable«SearchUserResource»:
      title: Iterable«SearchUserResource»
      type: object
    Iterable«TestItemHistoryElement»:
      title: Iterable«TestItemHistoryElement»
      type: object
    Iterable«TestItemResource»:
      title: Iterable«TestItemResource»
      type: object
    Iterable«UserFilterResource»:
      title: Iterable«UserFilterResource»
      type: object
    Iterable«UserResource»:
      title: Iterable«UserResource»
      type: object
    Iterable«object»:
      title: Iterable«object»
      type: object
    Iterable«string»:
      title: Iterable«string»
      type: object
    LaunchPathName:
      title: LaunchPathName
      type: object
      properties:
        name:
          type: string
        number:
          type: integer
          format: int32
    LaunchResource:
      title: LaunchResource
      required:
        - id
        - name
        - number
        - startTime
        - status
        - uuid
      type: object
      properties:
        analysing:
          type: array
          items:
            type: string
        approximateDuration:
          type: number
          format: double
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
        description:
          type: string
        endTime:
          type: string
          format: date-time
        hasRetries:
          type: boolean
        id:
          type: integer
          format: int64
        lastModified:
          type: string
          format: date-time
        metadata:
          type: object
          properties: {}
        mode:
          type: string
          enum:
            - DEFAULT
            - DEBUG
        name:
          type: string
        number:
          type: integer
          format: int64
        owner:
          type: string
        rerun:
          type: boolean
        startTime:
          type: string
          format: date-time
        statistics:
          $ref: '#/components/schemas/StatisticsResource'
        status:
          type: string
        uuid:
          type: string
    LaunchesPerUser:
      title: LaunchesPerUser
      type: object
      properties:
        count:
          type: integer
          format: int32
        fullName:
          type: string
    LinkExternalIssueRQ:
      title: LinkExternalIssueRQ
      type: object
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/ExternalSystemIssue'
        testItemIds:
          type: array
          items:
            type: integer
            format: int64
    LogEntry:
      title: LogEntry
      type: object
      properties:
        level:
          type: string
        message:
          type: string
    LogResource:
      title: LogResource
      required:
        - id
        - uuid
      type: object
      properties:
        binaryContent:
          $ref: '#/components/schemas/BinaryContent'
        id:
          type: integer
          format: int64
        itemId:
          type: integer
          format: int64
        launchId:
          type: integer
          format: int64
        level:
          type: string
          enum:
            - error
            - warn
            - info
            - debug
            - trace
            - fatal
            - unknown
        message:
          type: string
        thumbnail:
          type: string
        time:
          type: string
          format: date-time
        uuid:
          type: string
    MergeLaunchesRQ:
      title: MergeLaunchesRQ
      required:
        - extendSuitesDescription
        - launches
        - name
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
        description:
          type: string
        endTime:
          type: string
          format: date-time
        extendSuitesDescription:
          type: boolean
        launches:
          type: array
          items:
            type: integer
            format: int64
        mergeType:
          type: string
          enum:
            - BASIC
            - DEEP
        mode:
          type: string
          enum:
            - DEFAULT
            - DEBUG
        name:
          type: string
        startTime:
          type: string
          format: date-time
    OperationCompletionRS:
      title: OperationCompletionRS
      type: object
      properties:
        message:
          type: string
    Order:
      title: Order
      required:
        - isAsc
        - sortingColumn
      type: object
      properties:
        isAsc:
          type: boolean
        sortingColumn:
          type: string
    OwnedEntityResource:
      title: OwnedEntityResource
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        owner:
          type: string
    PagedLogResource:
      title: PagedLogResource
      required:
        - id
        - uuid
      type: object
      properties:
        binaryContent:
          $ref: '#/components/schemas/BinaryContent'
        id:
          type: integer
          format: int64
        itemId:
          type: integer
          format: int64
        launchId:
          type: integer
          format: int64
        level:
          type: string
          enum:
            - error
            - warn
            - info
            - debug
            - trace
            - fatal
            - unknown
        message:
          type: string
        pagesLocation:
          type: array
          items:
            $ref: '#/components/schemas/Entry«long,int»'
        thumbnail:
          type: string
        time:
          type: string
          format: date-time
        uuid:
          type: string
    PagedResponse«ActivityEventResource»:
      title: PagedResponse«ActivityEventResource»
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ActivityEventResource'
        limit:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
        order:
          type: string
        sort:
          type: string
        total_count:
          type: integer
          format: int64
    ParameterResource:
      title: ParameterResource
      required:
        - key
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    PathNameResource:
      title: PathNameResource
      type: object
      properties:
        itemPaths:
          type: array
          items:
            $ref: '#/components/schemas/ItemPathName'
        launchPathName:
          $ref: '#/components/schemas/LaunchPathName'
    PatternTemplateResource:
      title: PatternTemplateResource
      type: object
      properties:
        enabled:
          type: boolean
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
        value:
          type: string
    Position:
      title: Position
      type: object
      properties:
        positionX:
          type: integer
          format: int32
        positionY:
          type: integer
          format: int32
    PostFormField:
      title: PostFormField
      required:
        - id
        - required
        - value
      type: object
      properties:
        definedValues:
          type: array
          items:
            $ref: '#/components/schemas/AllowedValue'
        fieldName:
          type: string
        fieldType:
          type: string
        id:
          type: string
        required:
          type: boolean
        value:
          type: array
          items:
            type: string
    PostTicketRQ:
      title: PostTicketRQ
      required:
        - backLinks
        - fields
        - item
      type: object
      properties:
        backLinks:
          type: object
          additionalProperties:
            type: string
        domain:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/PostFormField'
        includeComments:
          type: boolean
        includeData:
          type: boolean
        includeLogs:
          type: boolean
        item:
          type: integer
          format: int64
        logQuantity:
          type: integer
          format: int32
        password:
          type: string
        token:
          type: string
        username:
          type: string
    PreferenceResource:
      title: PreferenceResource
      required:
        - projectId
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/UserFilterResource'
        projectId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
    ProjectConfiguration:
      title: ProjectConfiguration
      required:
        - attributes
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: string
        notificationsConfiguration:
          $ref: '#/components/schemas/ProjectNotificationConfigDTO'
        patterns:
          type: array
          items:
            $ref: '#/components/schemas/PatternTemplateResource'
        subTypes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/IssueSubTypeResource'
    ProjectConfigurationUpdate:
      title: ProjectConfigurationUpdate
      required:
        - attributes
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: string
    ProjectInfoResource:
      title: ProjectInfoResource
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        entryType:
          type: string
        id:
          type: integer
          format: int64
        lastRun:
          type: string
          format: date-time
        launchesPerUser:
          type: array
          items:
            $ref: '#/components/schemas/LaunchesPerUser'
        launchesPerWeek:
          type: string
        launchesQuantity:
          type: integer
          format: int32
        organization:
          type: string
        projectName:
          type: string
        uniqueTickets:
          type: integer
          format: int32
        usersQuantity:
          type: integer
          format: int32
    ProjectNotificationConfigDTO:
      title: ProjectNotificationConfigDTO
      type: object
      properties:
        cases:
          type: array
          items:
            $ref: '#/components/schemas/SenderCaseDTO'
        enabled:
          type: boolean
    ProjectResource:
      title: ProjectResource
      required:
        - configuration
        - entryType
        - projectId
        - projectName
      type: object
      properties:
        allocatedStorage:
          type: integer
          format: int64
        configuration:
          $ref: '#/components/schemas/ProjectConfiguration'
        creationDate:
          type: string
          format: date-time
        entryType:
          type: string
        integrations:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationResource'
        organization:
          type: string
        projectId:
          type: integer
          format: int64
        projectName:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/ProjectUser'
    ProjectSettingsResource:
      title: ProjectSettingsResource
      required:
        - project
        - subTypes
      type: object
      properties:
        project:
          type: integer
          format: int64
        subTypes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/IssueSubTypeResource'
    ProjectUser:
      title: ProjectUser
      type: object
      properties:
        login:
          type: string
        projectRole:
          type: string
    ResetPasswordRQ:
      title: ResetPasswordRQ
      required:
        - password
        - uuid
      type: object
      properties:
        password:
          type: string
        uuid:
          type: string
    RestorePasswordRQ:
      title: RestorePasswordRQ
      required:
        - email
      type: object
      properties:
        email:
          type: string
    SaveLogRQ:
      title: SaveLogRQ
      required:
        - launchUuid
        - time
      type: object
      properties:
        file:
          $ref: '#/components/schemas/File'
        itemUuid:
          type: string
          description: UUID of test item owned this log
        launchUuid:
          type: string
        level:
          type: string
          enum:
            - error
            - warn
            - info
            - debug
            - trace
            - fatal
            - unknown
        message:
          type: string
        time:
          type: string
          format: date-time
        uuid:
          type: string
    SearchCriteria:
      title: SearchCriteria
      required:
        - filter_key
        - value
      type: object
      properties:
        filter_key:
          type: string
        operation:
          type: string
          enum:
            - EQ
            - NE
            - CNT
            - NON_CNT
            - BTW
            - IN
        value:
          type: string
    SearchCriteriaRQ:
      title: SearchCriteriaRQ
      type: object
      properties:
        search_criterias:
          type: array
          items:
            $ref: '#/components/schemas/SearchCriteria'
    SearchLogRq:
      title: SearchLogRq
      type: object
      properties:
        filterId:
          type: integer
          format: int64
        searchMode:
          type: string
          enum:
            - currentLaunch
            - launchName
            - filter
    SearchLogRs:
      title: SearchLogRs
      type: object
      properties:
        duration:
          type: number
          format: double
        issue:
          $ref: '#/components/schemas/Issue'
        itemId:
          type: integer
          format: int64
        itemName:
          type: string
        launchId:
          type: integer
          format: int64
        logs:
          type: array
          items:
            $ref: '#/components/schemas/LogEntry'
        path:
          type: string
        pathNames:
          $ref: '#/components/schemas/PathNameResource'
        patternTemplates:
          type: array
          items:
            type: string
        status:
          type: string
    SearchUserResource:
      title: SearchUserResource
      required:
        - email
        - id
        - login
      type: object
      properties:
        email:
          type: string
        fullName:
          type: string
        id:
          type: integer
          format: int64
        login:
          type: string
    SenderCaseDTO:
      title: SenderCaseDTO
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
        attributesOperator:
          type: string
          enum:
            - AND
            - OR
        enabled:
          type: boolean
        launchNames:
          type: array
          items:
            type: string
        recipients:
          type: array
          items:
            type: string
        sendCase:
          type: string
          enum:
            - ALWAYS
            - FAILED
            - MORE_10
            - MORE_20
            - MORE_50
    Serializable:
      title: Serializable
      type: object
    Size:
      title: Size
      type: object
      properties:
        height:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
    StartLaunchRQ:
      title: StartLaunchRQ
      required:
        - name
        - startTime
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ItemAttributesRQ'
        description:
          type: string
        mode:
          type: string
          enum:
            - DEFAULT
            - DEBUG
        name:
          type: string
        rerun:
          type: boolean
        rerunOf:
          type: string
          description: UUID of desired launch to rerun
        startTime:
          type: string
          format: date-time
    StartLaunchRS:
      title: StartLaunchRS
      type: object
      properties:
        id:
          type: string
        number:
          type: integer
          format: int64
    StartTestItemRQ:
      title: StartTestItemRQ
      required:
        - launchUuid
        - name
        - startTime
        - type
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ItemAttributesRQ'
        codeRef:
          type: string
        description:
          type: string
        hasStats:
          type: boolean
        launchUuid:
          type: string
          description: UUID of parent launch
        name:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterResource'
        retry:
          type: boolean
        retryOf:
          type: string
        startTime:
          type: string
          format: date-time
        testCaseId:
          type: string
        type:
          type: string
          enum:
            - SUITE
            - STORY
            - TEST
            - SCENARIO
            - STEP
            - BEFORE_CLASS
            - BEFORE_GROUPS
            - BEFORE_METHOD
            - BEFORE_SUITE
            - BEFORE_TEST
            - AFTER_CLASS
            - AFTER_GROUPS
            - AFTER_METHOD
            - AFTER_SUITE
            - AFTER_TEST
        uniqueId:
          type: string
    StatisticsResource:
      title: StatisticsResource
      type: object
      properties:
        defects:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: integer
              format: int32
        executions:
          type: object
          additionalProperties:
            type: integer
            format: int32
    SuggestInfo:
      title: SuggestInfo
      type: object
      properties:
        clusterId:
          type: integer
          format: int64
        esPosition:
          type: integer
          format: int32
        esScore:
          type: number
          format: float
        isMergedLog:
          type: boolean
        issueType:
          type: string
        launchId:
          type: integer
          format: int64
        launchName:
          type: string
        matchScore:
          type: number
          format: float
        methodName:
          type: string
        minShouldMatch:
          type: integer
          format: int32
        modelFeatureNames:
          type: string
        modelFeatureValues:
          type: string
        modelInfo:
          type: string
        processedTime:
          type: number
          format: float
        project:
          type: integer
          format: int64
        relevantItem:
          type: integer
          format: int64
        relevantLogId:
          type: integer
          format: int64
        resultPosition:
          type: integer
          format: int32
        testItem:
          type: integer
          format: int64
        testItemLogId:
          type: integer
          format: int64
        usedLogLines:
          type: integer
          format: int32
        userChoice:
          type: integer
          format: int32
    SuggestedItem:
      title: SuggestedItem
      type: object
      properties:
        logs:
          type: array
          items:
            $ref: '#/components/schemas/LogResource'
        suggestRs:
          $ref: '#/components/schemas/SuggestInfo'
        testItemResource:
          $ref: '#/components/schemas/TestItemResource'
    TestItemHistoryElement:
      title: TestItemHistoryElement
      type: object
      properties:
        groupingField:
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/TestItemResource'
    TestItemResource:
      title: TestItemResource
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
        codeRef:
          type: string
        description:
          type: string
        endTime:
          type: string
          format: date-time
        hasChildren:
          type: boolean
        hasStats:
          type: boolean
        id:
          type: integer
          format: int64
        issue:
          $ref: '#/components/schemas/Issue'
        launchId:
          type: integer
          format: int64
        launchStatus:
          type: string
        name:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterResource'
        parent:
          type: integer
          format: int64
        path:
          type: string
        pathNames:
          $ref: '#/components/schemas/PathNameResource'
        patternTemplates:
          type: array
          items:
            type: string
        retries:
          type: array
          items:
            $ref: '#/components/schemas/TestItemResource'
        startTime:
          type: string
          format: date-time
        statistics:
          $ref: '#/components/schemas/StatisticsResource'
        status:
          type: string
        testCaseHash:
          type: integer
          format: int32
        testCaseId:
          type: string
        type:
          type: string
        uniqueId:
          type: string
        uuid:
          type: string
    Ticket:
      title: Ticket
      type: object
      properties:
        id:
          type: string
        pluginName:
          type: string
        status:
          type: string
        summary:
          type: string
        url:
          type: string
    Timestamp:
      title: Timestamp
      type: object
      properties:
        date:
          type: integer
          format: int32
        day:
          type: integer
          format: int32
        hours:
          type: integer
          format: int32
        minutes:
          type: integer
          format: int32
        month:
          type: integer
          format: int32
        nanos:
          type: integer
          format: int32
        seconds:
          type: integer
          format: int32
        time:
          type: integer
          format: int64
        timezoneOffset:
          type: integer
          format: int32
        year:
          type: integer
          format: int32
    UnassignUsersRQ:
      title: UnassignUsersRQ
      required:
        - userNames
      type: object
      properties:
        userNames:
          type: array
          items:
            type: string
    UnlinkExternalIssueRQ:
      title: UnlinkExternalIssueRQ
      type: object
      properties:
        testItemIds:
          type: array
          items:
            type: integer
            format: int64
        ticketIds:
          type: array
          items:
            type: string
    UpdateDashboardRQ:
      title: UpdateDashboardRQ
      required:
        - name
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        updateWidgets:
          type: array
          items:
            $ref: '#/components/schemas/WidgetObjectModel'
    UpdateIssueSubTypeRQ:
      title: UpdateIssueSubTypeRQ
      required:
        - ids
      type: object
      properties:
        ids:
          type: array
          items:
            $ref: '#/components/schemas/UpdateOneIssueSubTypeRQ'
    UpdateItemAttributeRQ:
      title: UpdateItemAttributeRQ
      type: object
      properties:
        action:
          type: string
          enum:
            - DELETE
            - UPDATE
            - CREATE
        from:
          $ref: '#/components/schemas/ItemAttributeResource'
        to:
          $ref: '#/components/schemas/ItemAttributeResource'
    UpdateLaunchRQ:
      title: UpdateLaunchRQ
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
        description:
          type: string
        mode:
          type: string
          enum:
            - DEFAULT
            - DEBUG
    UpdateOneIssueSubTypeRQ:
      title: UpdateOneIssueSubTypeRQ
      required:
        - locator
        - typeRef
      type: object
      properties:
        color:
          type: string
        locator:
          type: string
        longName:
          type: string
        shortName:
          type: string
        typeRef:
          type: string
    UpdatePatternTemplateRQ:
      title: UpdatePatternTemplateRQ
      type: object
      properties:
        enabled:
          type: boolean
        name:
          type: string
    UpdatePluginStateRQ:
      title: UpdatePluginStateRQ
      type: object
      properties:
        enabled:
          type: boolean
    UpdateProjectRQ:
      title: UpdateProjectRQ
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/ProjectConfigurationUpdate'
        users:
          type: object
          additionalProperties:
            type: string
    UpdateTestItemRQ:
      title: UpdateTestItemRQ
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ItemAttributeResource'
        description:
          type: string
        status:
          type: string
    UpdateUserFilterRQ:
      title: UpdateUserFilterRQ
      required:
        - conditions
        - name
        - orders
        - type
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/UserFilterCondition'
        description:
          type: string
        name:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        type:
          type: string
          enum:
            - launch
            - testitem
            - log
    UserBidRS:
      title: UserBidRS
      type: object
      properties:
        email:
          type: string
        isActive:
          type: boolean
        uuid:
          type: string
    UserFilterCondition:
      title: UserFilterCondition
      required:
        - condition
        - filteringField
        - value
      type: object
      properties:
        condition:
          type: string
        filteringField:
          type: string
        value:
          type: string
    UserFilterResource:
      title: UserFilterResource
      required:
        - conditions
        - id
        - name
        - orders
        - owner
        - type
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/UserFilterCondition'
        description:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        owner:
          type: string
        type:
          type: string
    UserResource:
      title: UserResource
      required:
        - email
        - id
        - userId
      type: object
      properties:
        accountType:
          type: string
        assignedProjects:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AssignedProject'
        email:
          type: string
        fullName:
          type: string
        id:
          type: integer
          format: int64
        metadata:
          type: object
          properties: {}
        photoId:
          type: string
        photoLoaded:
          type: boolean
        userId:
          type: string
        userRole:
          type: string
    WidgetObjectModel:
      title: WidgetObjectModel
      type: object
      properties:
        widgetId:
          type: integer
          format: int64
        widgetName:
          type: string
        widgetOptions:
          type: object
          properties: {}
        widgetPosition:
          $ref: '#/components/schemas/Position'
        widgetSize:
          $ref: '#/components/schemas/Size'
        widgetType:
          type: string
    WidgetPreviewRQ:
      title: WidgetPreviewRQ
      required:
        - widgetType
      type: object
      properties:
        contentParameters:
          $ref: '#/components/schemas/ContentParameters'
        filterIds:
          type: array
          items:
            type: integer
            format: int64
        widgetType:
          type: string
          enum:
            - oldLineChart
            - investigatedTrend
            - launchStatistics
            - statisticTrend
            - casesTrend
            - notPassed
            - overallStatistics
            - uniqueBugTable
            - bugTrend
            - activityStream
            - launchesComparisonChart
            - launchesDurationChart
            - launchesTable
            - topTestCases
            - flakyTestCases
            - passingRateSummary
            - passingRatePerLaunch
            - productStatus
            - mostTimeConsuming
            - cumulative
    WidgetRQ:
      title: WidgetRQ
      required:
        - name
        - widgetType
      type: object
      properties:
        contentParameters:
          $ref: '#/components/schemas/ContentParameters'
        description:
          type: string
        filterIds:
          type: array
          items:
            type: integer
            format: int64
        name:
          type: string
        widgetType:
          type: string
          enum:
            - oldLineChart
            - investigatedTrend
            - launchStatistics
            - statisticTrend
            - casesTrend
            - notPassed
            - overallStatistics
            - uniqueBugTable
            - bugTrend
            - activityStream
            - launchesComparisonChart
            - launchesDurationChart
            - launchesTable
            - topTestCases
            - flakyTestCases
            - passingRateSummary
            - passingRatePerLaunch
            - productStatus
            - mostTimeConsuming
            - cumulative
            - topPatternTemplates
            - componentHealthCheck
            - componentHealthCheckTable
    WidgetResource:
      title: WidgetResource
      required:
        - contentParameters
        - id
        - name
        - widgetType
      type: object
      properties:
        appliedFilters:
          type: array
          items:
            $ref: '#/components/schemas/UserFilterResource'
        content:
          type: object
          properties: {}
        contentParameters:
          $ref: '#/components/schemas/ContentParameters'
        description:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        owner:
          type: string
        widgetType:
          type: string
          enum:
            - oldLineChart
            - investigatedTrend
            - launchStatistics
            - statisticTrend
            - casesTrend
            - notPassed
            - overallStatistics
            - uniqueBugTable
            - bugTrend
            - activityStream
            - launchesComparisonChart
            - launchesDurationChart
            - launchesTable
            - topTestCases
            - flakyTestCases
            - passingRateSummary
            - passingRatePerLaunch
            - productStatus
            - mostTimeConsuming
            - cumulative
    YesNoRS:
      title: YesNoRS
      type: object
      properties:
        is:
          type: boolean
  # Manual added section
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer