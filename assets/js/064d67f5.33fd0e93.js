"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[591],{81168:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"developers-guides/BackEndJavaContributionGuide","title":"Back-end Java contribution guide","description":"Useful links","source":"@site/docs/developers-guides/BackEndJavaContributionGuide.mdx","sourceDirName":"developers-guides","slug":"/developers-guides/BackEndJavaContributionGuide","permalink":"/docs/developers-guides/BackEndJavaContributionGuide","draft":false,"unlisted":false,"editUrl":"https://github.com/reportportal/docs/blob/develop/docs/developers-guides/BackEndJavaContributionGuide.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Attachments (Screenshots) Guide","permalink":"/docs/developers-guides/AttachmentsGuide"},"next":{"title":"Interactions between API and Analyzer","permalink":"/docs/developers-guides/InteractionsBetweenAPIAndAnalyzer"}}');var s=i(74848),t=i(28453);const o={},a="Back-end Java contribution guide",l={},c=[{value:"Useful links",id:"useful-links",level:2},{value:"Deployment components description",id:"deployment-components-description",level:2},{value:"Code conventions",id:"code-conventions",level:2},{value:"IDE Formatter",id:"ide-formatter",level:3},{value:"Code style",id:"code-style",level:3},{value:"Git branch requirements",id:"git-branch-requirements",level:3},{value:"Open-source contribution workflow",id:"open-source-contribution-workflow",level:2},{value:"Dev environment setup",id:"dev-environment-setup",level:2},{value:"Pre requirements",id:"pre-requirements",level:3},{value:"How to keep DB data up-to-date",id:"how-to-keep-db-data-up-to-date",level:4},{value:"Service Authorization",id:"service-authorization",level:3},{value:"Service API",id:"service-api",level:3},{value:"Service Jobs",id:"service-jobs",level:3},{value:"Service UI",id:"service-ui",level:3},{value:"Development workflow",id:"development-workflow",level:2},{value:"Introduction to dependencies",id:"introduction-to-dependencies",level:3},{value:"Updates in dependencies",id:"updates-in-dependencies",level:3},{value:"Summary notes",id:"summary-notes",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{MediaViewer:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("MediaViewer",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"back-end-java-contribution-guide",children:"Back-end Java contribution guide"})}),"\n",(0,s.jsx)(n.h2,{id:"useful-links",children:"Useful links"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://reportportal.io",children:"Landing page"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://reportportal.io/docs",children:"Official documentation"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/reportportal/reportportal/wiki/Contribution",children:"Contribution notes on GitHub"})}),"\n",(0,s.jsx)(n.h2,{id:"deployment-components-description",children:"Deployment components description"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://traefik.io",children:"Traefik"})," as reversed proxy and application entry point"]}),"\n",(0,s.jsxs)(n.li,{children:["Data analysis","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://opensearch.org/",children:"OpenSearch"})," as logs analysis data storage"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/service-auto-analyzer",children:"Service Analyzer"})," as log messages analysis tool"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/service-auto-analyzer",children:"Service Analyzer Train"})," is a ",(0,s.jsx)(n.code,{children:"Service Analyzer"})," running in training mode to increase analysis quality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/service-metrics-gatherer",children:"Service Metrics Gatherer"})," as training model manager and ",(0,s.jsx)(n.code,{children:"Service Analyzer"})," monitoring"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Database","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.postgresql.org",children:"Postgresql"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/migrations",children:"Service Migrations"})," - service for DB schema and data updates"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.rabbitmq.com",children:"RabbitMQ"})," - message broker for inter-service communication"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://min.io",children:"Minio"})," - binary data storage (alternative to plain filesystem storage)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/service-index",children:"Service Index"})," - gateway service with services metadata resolving mechanism"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/service-ui",children:"Service UI"})," - ReportPortal web UI"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"There are three Java repositories that are part of the whole RP deployment:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/service-api",children:"Service API"})," - REST API service as ReportPortal functionality provider"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/service-authorization",children:"Service Authorization"})," - REST Authorization service for users authentication"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/service-jobs",children:"Service Jobs"})," - Service with jobs to process data in the back-ground"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"code-conventions",children:"Code conventions"}),"\n",(0,s.jsx)(n.h3,{id:"ide-formatter",children:"IDE Formatter"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/reportportal/reportportal/blob/master/idea_formatting_profile.xml",children:"Settings file"})}),"\n",(0,s.jsx)(n.p,{children:"Steps to import:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'Click on IDEA "Preferences"'}),"\n",(0,s.jsx)(n.li,{children:'Choose "Editor" section'}),"\n",(0,s.jsx)(n.li,{children:'Click on "Code style"'}),"\n",(0,s.jsx)(n.li,{children:'In "Scheme" section click on settings wheel \u2192 Import Scheme \u2192 IntelliJ IDEA code style XML'}),"\n"]}),"\n",(0,s.jsx)(r,{src:i(10641),alt:"Idea Formatter"}),"\n",(0,s.jsx)(n.h3,{id:"code-style",children:"Code style"}),"\n",(0,s.jsx)(n.p,{children:"This document is aimed at improving aspects of our existing code base and synchronizing implementation/design approaches within the team. It serves as a blueprint for now but will be continually updated and improved."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Code should be as simple and readable as possible."}),"\n",(0,s.jsx)(n.li,{children:"Avoid unnecessary interfaces. In our case, if we aren't planning to extend functionality and can easily refactor, we should avoid creating an interface unless there is a distinct need (e.g., for testing, code auto-generation, etc.)."}),"\n",(0,s.jsx)(n.li,{children:"Methods and classes should be named according to their responsibilities. If a name isn't self-explanatory, provide a description."}),"\n",(0,s.jsx)(n.li,{children:"Overloaded or overridden methods with the same name should perform similar operations."}),"\n",(0,s.jsx)(n.li,{children:"Keep parameter order consistent across methods with the same name."}),"\n",(0,s.jsxs)(n.li,{children:['Parameter names should be clear and indicative of their function. For example, instead of using a generic "id", specify the ',(0,s.jsx)(n.code,{children:"entity"}),' it\'s related to, like "userId" or "projectId."']}),"\n",(0,s.jsx)(n.li,{children:"The same principle applies to return parameters."}),"\n",(0,s.jsx)(n.li,{children:"It's advisable to use a suitable structure to avoid unnecessary conversions."}),"\n",(0,s.jsx)(n.li,{children:"Commonly used flows (checks, structure processing, etc.) should be moved to utilities."}),"\n",(0,s.jsxs)(n.li,{children:["Manually working with threads should be avoided unless necessary (utilize defined ",(0,s.jsx)(n.code,{children:"TaskExecutor"})," or create a new one)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Optional"})," and ",(0,s.jsx)(n.code,{children:"Stream"})," should be used primarily when they enhance readability. Always return ",(0,s.jsx)(n.code,{children:"Optional"})," instead of ",(0,s.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Avoid using two terminal operations in a Stream."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"git-branch-requirements",children:"Git branch requirements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Working branch names should start with the Jira-id (EPMRPP-DDD) and an optional description, e.g., ",(0,s.jsx)(n.code,{children:"PMRPP-444"})," or ",(0,s.jsx)(n.code,{children:"EPMRPP-443-fix-some-bugs"}),". All Jira branches must be related to a Jira ticket."]}),"\n",(0,s.jsxs)(n.li,{children:["All commit messages in ",(0,s.jsx)(n.code,{children:"master"}),", ",(0,s.jsx)(n.code,{children:"develop"}),", and ",(0,s.jsx)(n.code,{children:"release"})," branches must start with a Jira-id as well: EPMRPP-445 Some important fix."]}),"\n",(0,s.jsx)(n.li,{children:"It is better to divide commits into small, logically complete parts within the branch, for clarity during code review."}),"\n",(0,s.jsxs)(n.li,{children:["When merging a PR into the main branch (",(0,s.jsx)(n.code,{children:"master"}),", ",(0,s.jsx)(n.code,{children:"develop"}),", ",(0,s.jsx)(n.code,{children:"release"}),"), all commits should be squashed and provided with a suitable description with the Jira-id by the person who performs the merge."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"For contributors who do not have access to our Jira tasks"}),", the branch name prefix should be the GitHub issue name. It is highly recommended to create an issue that doesn't already exist and then fix it within your PR, even if it's a new function. The issue will remain there, a record of your ideas and comments from other contributors. Additionally, ReportPortal users who are not developers might prefer to look through issues rather than PRs to verify if a specific issue has been addressed in a new version of ReportPortal. This is a crucial component in maintaining a transparent, efficient test automation reporting dashboard for all users."]}),"\n",(0,s.jsx)(n.h2,{id:"open-source-contribution-workflow",children:"Open-source contribution workflow"}),"\n",(0,s.jsxs)(n.p,{children:["All features fixes should be added to ",(0,s.jsx)(n.code,{children:"develop"})," branch only, exclusions: hot-fixes"]}),"\n",(0,s.jsx)(n.p,{children:"Changes applying workflow:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Clone repository or fork from it"}),"\n",(0,s.jsxs)(n.li,{children:["Checkout ",(0,s.jsx)(n.code,{children:"develop"})," branch"]}),"\n",(0,s.jsx)(n.li,{children:"Create branch according to name policy"}),"\n",(0,s.jsx)(n.li,{children:"Push branch to the remote"}),"\n",(0,s.jsxs)(n.li,{children:["Create PR according to name policy into the ",(0,s.jsx)(n.code,{children:"develop"})," branch of the RP repository"]}),"\n",(0,s.jsx)(n.li,{children:"Review and merge/reject PR (squash commits in one during merge)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"dev-environment-setup",children:"Dev environment setup"}),"\n",(0,s.jsx)(n.h3,{id:"pre-requirements",children:"Pre requirements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Postgresql should be deployed"}),"\n",(0,s.jsx)(n.li,{children:"Service Migration should fill/update DB data"}),"\n",(0,s.jsx)(n.li,{children:"Binary data storage should be configured"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["To deploy DB with the latest schema we need the ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," that looks like this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'version: \'2.4\'\nservices:\n\n  postgres:\n    image: postgres:12-alpine\n    shm_size: \'512m\'\n    environment:\n      POSTGRES_USER: rpuser\n      POSTGRES_PASSWORD: rppass\n      POSTGRES_DB: reportportal\n    volumes:\n      # For unix host\n      - ./data/postgres:/var/lib/postgresql/data\n      # For windows host\n      # - postgres:/var/lib/postgresql/data\n    ports:\n      - "5432:5432"\n    command:\n      -c checkpoint_completion_target=0.9\n      -c work_mem=96MB\n      -c wal_writer_delay=20ms\n      -c synchronous_commit=off\n      -c wal_buffers=32MB\n      -c min_wal_size=2GB\n      -c max_wal_size=4GB\n    healthcheck:\n      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]\n      interval: 10s\n      timeout: 120s\n      retries: 10\n    restart: always\n  \n  db-scripts:\n    image: reportportal/migrations:5.6.0\n    depends_on:\n      postgres:\n        condition: service_healthy\n    environment:\n      POSTGRES_SERVER: postgres\n      POSTGRES_PORT: 5432\n      POSTGRES_DB: reportportal\n      POSTGRES_USER: rpuser\n      POSTGRES_PASSWORD: rppass\n    restart: on-failure\n'})}),"\n",(0,s.jsx)(n.h4,{id:"how-to-keep-db-data-up-to-date",children:"How to keep DB data up-to-date"}),"\n",(0,s.jsx)(n.p,{children:"Maintaining an up-to-date database (DB) schema is an important aspect of efficient test automation reporting tools management."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"image: reportportal/migrations:5.6.0"})," is the released version of the migrations service. However, if any changes were made in the develop branch after the release, the migrated DB schema may be outdated. To prevent this and ensure your DB data remains current, follow the steps outlined below:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["clone/update ",(0,s.jsx)(n.a,{href:"https://github.com/reportportal/migrations",children:"Migrations Repository"})]}),"\n",(0,s.jsxs)(n.li,{children:["checkout ",(0,s.jsx)(n.code,{children:"develop"})," branch"]}),"\n",(0,s.jsx)(n.li,{children:"run the following command:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"docker-compose run --rm migrations\n"})}),"\n",(0,s.jsx)(n.p,{children:"This process leverages all SQL scripts present in the develop branch to update your locally running DB instance."}),"\n",(0,s.jsxs)(n.p,{children:["By default, filesystem storage is employed for binary data; meaning all data will be stored on your local filesystem. If you prefer to store binaries using Minio (as we do in our production), you need to deploy it as well. You can do this by adding the necessary pieces to the existing ",(0,s.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'  minio:\n    image: minio/minio:RELEASE.2020-10-27T04-03-55Z\n    ports:\n      - \'9000:9000\'\n    volumes:\n      # For unix host\n      - ./data/storage:/data\n      # For windows host\n      # - minio:/data\n    environment:\n      MINIO_ACCESS_KEY: minio\n      MINIO_SECRET_KEY: minio123\n    command: server /data\n    healthcheck:\n      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n    restart: always\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Please be aware of the comments directed towards ",(0,s.jsx)(n.code,{children:"Windows"})," - if you are developing on Windows, uncomment the sections for ",(0,s.jsx)(n.code,{children:"Windows"})," and comment out any ",(0,s.jsx)(n.code,{children:"Linux"}),"-related sections, applicable to both Postgres and Minio. Then, add the following statement to the ",(0,s.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"volumes:\n  postgres:\n  minio:\n"})}),"\n",(0,s.jsxs)(n.p,{children:["As the result we have the ",(0,s.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'version: \'2.4\'\nservices:\n\n  postgres:\n    image: postgres:12-alpine\n    shm_size: \'512m\'\n    environment:\n      POSTGRES_USER: rpuser\n      POSTGRES_PASSWORD: rppass\n      POSTGRES_DB: reportportal\n    volumes:\n      # For unix host\n      - ./data/postgres:/var/lib/postgresql/data\n      # For windows host\n      # - postgres:/var/lib/postgresql/data\n    ports:\n      - "5432:5432"\n    command:\n      -c checkpoint_completion_target=0.9\n      -c work_mem=96MB\n      -c wal_writer_delay=20ms\n      -c synchronous_commit=off\n      -c wal_buffers=32MB\n      -c min_wal_size=2GB\n      -c max_wal_size=4GB\n    healthcheck:\n      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]\n      interval: 10s\n      timeout: 120s\n      retries: 10\n    restart: always\n  \n  db-scripts:\n    image: reportportal/migrations:5.6.0\n    depends_on:\n      postgres:\n        condition: service_healthy\n    environment:\n      POSTGRES_SERVER: postgres\n      POSTGRES_PORT: 5432\n      POSTGRES_DB: reportportal\n      POSTGRES_USER: rpuser\n      POSTGRES_PASSWORD: rppass\n    restart: on-failure\n\n  minio:\n    image: minio/minio:RELEASE.2020-10-27T04-03-55Z\n    ports:\n      - \'9000:9000\'\n    volumes:\n      # For unix host\n      - ./data/storage:/data\n      # For windows host\n      # - minio:/data\n    environment:\n      MINIO_ACCESS_KEY: minio\n      MINIO_SECRET_KEY: minio123\n    command: server /data\n    healthcheck:\n      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n    restart: always\n    \nvolumes:\n  postgres:\n  minio:\n'})}),"\n",(0,s.jsx)(n.p,{children:"This file will be updated in the subsequent sections, but we can already initiate the development of our first service."}),"\n",(0,s.jsx)(n.h3,{id:"service-authorization",children:"Service Authorization"}),"\n",(0,s.jsxs)(n.p,{children:["To start up Service Authorization, you should populate the marked values in the ",(0,s.jsx)(n.code,{children:"application.yaml file"}),":"]}),"\n",(0,s.jsx)(r,{src:i(46184),alt:"Start Service Authorization"}),"\n",(0,s.jsx)(r,{src:i(94317),alt:"Values you should fill"}),"\n",(0,s.jsxs)(n.p,{children:["(Optional) Adjust the ",(0,s.jsx)(n.code,{children:"context-path"})," value from ",(0,s.jsx)(n.code,{children:"/"})," to ",(0,s.jsx)(n.code,{children:"/uat"})," if you plan to deploy Service UI locally (described in a later section)."]}),"\n",(0,s.jsx)(n.h3,{id:"service-api",children:"Service API"}),"\n",(0,s.jsx)(n.p,{children:"Prior to initiating the Service API, RabbitMQ needs to be included in our deployment."}),"\n",(0,s.jsx)(n.p,{children:"In ReportPortal, RabbitMQ serves three key functions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Inter-service communication between Service API and Service Analyzer."}),"\n",(0,s.jsx)(n.li,{children:"Asynchronous reporting feature."}),"\n",(0,s.jsx)(n.li,{children:"User activity event publishing."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["To add RabbitMQ to our deployment, the following should be incorporated into our existing ",(0,s.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'  rabbitmq:\n    image: rabbitmq:3.7.16-management\n    ports:\n      - "5672:5672"\n      - "15672:15672"\n    environment:\n      RABBITMQ_DEFAULT_USER: "rabbitmq"\n      RABBITMQ_DEFAULT_PASS: "rabbitmq"\n    healthcheck:\n      test: ["CMD", "rabbitmqctl", "status"]\n      retries: 5\n    restart: always\n'})}),"\n",(0,s.jsxs)(n.p,{children:["We can now begin deploying the Service API without encountering any issues. However, it's important to note that all Analyzer-related interactions (such as publishing to analyzer queues and receiving responses) will not be successful. To rectify this, we need to deploy the Service Analyzer and all its required services. To achieve this, we add the following to our ",(0,s.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'  opensearch:\n    image: opensearchproject/opensearch:2.11.0\n    container_name: opensearch\n    environment:\n      discovery.type: single-node\n      plugins.security.disabled: "true"\n      bootstrap.memory_lock: "true"\n      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m\n      DISABLE_INSTALL_DEMO_CONFIG: "true"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    ports:\n      - "9200:9200"\n      - "9600:9600"\n    volumes:\n      - opensearch:/usr/share/opensearch/data\n    healthcheck:\n      test: ["CMD", "curl","-s" ,"-f", "http://0.0.0.0:9200/_cat/health"]\n    restart: always\n\n  analyzer: \n    image: reportportal/service-auto-analyzer:5.6.0\n    environment:\n      LOGGING_LEVEL: info\n      AMQP_EXCHANGE_NAME: analyzer-default\n      AMQP_URL: amqp://rabbitmq:rabbitmq@rabbitmq:5672\n      ES_HOSTS: http://opensearch:9200\n      # ES_USER: \n      # ES_PASSWORD: \n      # MINIO_SHORT_HOST: minio:9000\n      # MINIO_ACCESS_KEY: minio\n      # MINIO_SECRET_KEY: minio123\n    depends_on:\n      opensearch:\n        condition: service_started\n      rabbitmq:\n        condition: service_healthy\n    restart: always\n'})}),"\n",(0,s.jsxs)(n.p,{children:["As a result of these additions, your ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," should look something like ",(0,s.jsx)(n.a,{href:"pathname:///files/DockerCompose.yml",children:"this"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["To start the Service API, populate the marked values in your ",(0,s.jsx)(n.code,{children:"application.yaml"})," file:"]}),"\n",(0,s.jsx)(r,{src:i(46184),alt:"Start Service API"}),"\n",(0,s.jsx)(r,{src:i(94317),alt:"Authorization binary Configuration"}),"\n",(0,s.jsx)(r,{src:i(60302),alt:"Rabbitmq Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Alternatively, you may need to change the ",(0,s.jsx)(n.code,{children:"context-path"})," value from ",(0,s.jsx)(n.code,{children:"/"})," to ",(0,s.jsx)(n.code,{children:"/api"})," should you plan to deploy Service UI locally (detailed instructions will be provided at a later stage)."]}),"\n",(0,s.jsx)(n.h3,{id:"service-jobs",children:"Service Jobs"}),"\n",(0,s.jsxs)(n.p,{children:["To start Service Jobs, fill in the marked values in your ",(0,s.jsx)(n.code,{children:"application.yaml"})," file:"]}),"\n",(0,s.jsx)(r,{src:i(46184),alt:"Start Service Jobs"}),"\n",(0,s.jsx)(r,{src:i(94317),alt:"Values for binary"}),"\n",(0,s.jsx)(r,{src:i(60302),alt:"Values for Rabbitmq"}),"\n",(0,s.jsx)(n.h3,{id:"service-ui",children:"Service UI"}),"\n",(0,s.jsx)(n.p,{children:"After all back-end services deployed you may want to interact with them not only using tool like Postman but use ReportPortal UI too.\nOnce all back-end services are deployed, you may want to interface with them beyond using a tool like Postman and use ReportPortal UI. To accomplish this, follow these steps:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Clone or update the ",(0,s.jsx)(n.a,{href:"https://github.com/reportportal/service-ui",children:"Service UI repository"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Checkout the ",(0,s.jsx)(n.code,{children:"develop"})," branch."]}),"\n",(0,s.jsxs)(n.li,{children:["Make changes to the ",(0,s.jsx)(n.code,{children:"dev.config.js"})," file."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Before:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"proxy: [\n        {\n          context: ['/composite', '/api/', '/uat/'],\n          target: process.env.PROXY_PATH,\n          bypass(req) {\n            console.log(`proxy url: ${req.url}`);\n          },\n        },\n      ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"After:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"proxy: [\n        {\n          context: ['/composite', '/api/'],\n          target: 'http://localhost:8585',\n          bypass(req) {\n            console.log(`proxy url: ${req.url}`);\n          },\n        },\n        {\n          context: ['/uat/'],\n          target: 'http://localhost:9999',\n          bypass(req) {\n            console.log(`proxy url: ${req.url}`);\n          },\n        },\n      ]\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If NodeJs is not already installed, install it (version 20 is recommended)."}),"\n",(0,s.jsx)(n.li,{children:"From the root folder(service-ui), run Service UI using the following commands:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"cd app\nnpm install\nnpm run dev\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Open the Service UI page on ",(0,s.jsx)(n.code,{children:"localhost"})," using port ",(0,s.jsx)(n.code,{children:"3000"})," and try to login using the default credentials."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This will allow you to view your test automation dashboard and interact with the reported test results."}),"\n",(0,s.jsx)(n.h2,{id:"development-workflow",children:"Development workflow"}),"\n",(0,s.jsx)(n.h3,{id:"introduction-to-dependencies",children:"Introduction to dependencies"}),"\n",(0,s.jsxs)(n.p,{children:["In addition to common dependencies such as ",(0,s.jsx)(n.code,{children:"spring-..."}),", our Java services also have ReportPortal libraries distributed across different repositories. Here is a list of these dependencies:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/commons-dao",children:"Commons DAO"})," - Data layer dependency with domain model configuration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/commons-model",children:"Commons Model"})," - REST models dependency"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/commons",children:"Commons"})," - Some common utils for multiple usage purposes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/commons-rules",children:"Commons Rules"})," - Business rules validation dependency"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/plugin-api",children:"Plugin API"})," - ReportPortal plugin API"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/reportportal/commons-bom",children:"Commons BOM"})," - POM config for releases"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"updates-in-dependencies",children:"Updates in dependencies"}),"\n",(0,s.jsx)(n.p,{children:"Let's assume you found a bug when trying to retrieve a user from the DB. The logic is invoked within Service API, but the buggy code is in the Commons DAO dependency. To apply a fix and validate its effectiveness, follow these steps:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Clone or update the ",(0,s.jsx)(n.code,{children:"Commons DAO"})," repository."]}),"\n",(0,s.jsxs)(n.li,{children:["Checkout the ",(0,s.jsx)(n.code,{children:"develop"})," branch."]}),"\n",(0,s.jsx)(n.li,{children:"Implement the necessary changes."}),"\n",(0,s.jsx)(n.li,{children:"Create a branch according to naming policy."}),"\n",(0,s.jsx)(n.li,{children:"Push the changes to the remote."}),"\n",(0,s.jsxs)(n.li,{children:["Create a pull request (PR) to the ",(0,s.jsx)(n.code,{children:"develop"})," branch. Now, you can see your branch and the ",(0,s.jsx)(n.code,{children:"commit hash"})," on the GitHub page:"]}),"\n"]}),"\n",(0,s.jsx)(r,{src:i(98705),alt:"Commit hash"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Go to the service where your changes need to be applied (Service API in our instance)."}),"\n",(0,s.jsxs)(n.li,{children:["Copy the ",(0,s.jsx)(n.code,{children:"commit hash"})," and replace the existing one in the ",(0,s.jsx)(n.code,{children:"build.gradle"})," of the required service (Service API in our instance):"]}),"\n"]}),"\n",(0,s.jsx)(r,{src:i(94052),alt:"Build gradle updated"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["After rebuilding the project using ",(0,s.jsx)(n.code,{children:"Gradle"}),", the dependency will be resolved and downloaded using the ",(0,s.jsx)(n.a,{href:"https://jitpack.io",children:"Jitpack tool"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Generate a branch according to the naming policy."}),"\n",(0,s.jsx)(n.li,{children:"Push the changes to the remote."}),"\n",(0,s.jsxs)(n.li,{children:["Create a PR to the ",(0,s.jsx)(n.code,{children:"develop"})," branch."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"summary-notes",children:"Summary notes"}),"\n",(0,s.jsx)(n.p,{children:"This documentation should assist you in configuring the ReportPortal local development environment and provide an understanding of the standards and conventions we adhere to."}),"\n",(0,s.jsx)(n.p,{children:"The simplified development workflow should look as follows:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Always ",(0,s.jsx)(n.a,{href:"#how-to-keep-db-data-up-to-date",children:"maintain the latest schema and data"})," in your local DB instance."]}),"\n",(0,s.jsxs)(n.li,{children:["Checkout the ",(0,s.jsx)(n.code,{children:"develop"})," branch in the required repository."]}),"\n",(0,s.jsx)(n.li,{children:"Implement changes."}),"\n",(0,s.jsxs)(n.li,{children:["If changes in dependencies are necessary:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Go to the dependency repository, apply changes, and create a branch and PR according to conventions."}),"\n",(0,s.jsxs)(n.li,{children:["Using the ",(0,s.jsx)(n.code,{children:"commit hash"}),", update the dependency in the ",(0,s.jsx)(n.code,{children:"build.gradle"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Create a branch according to the name policy."}),"\n",(0,s.jsx)(n.li,{children:"Push to the remote."}),"\n",(0,s.jsx)(n.li,{children:"Create a PR following the name policy."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},94317:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});const r=i.p+"assets/images/AuthBinaryConfig-97c8cb6147fd65b01d0350dbd328c7b0.png"},46184:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});const r=i.p+"assets/images/AuthDbConfig-a73eda3410d18b21d1048d7e2040e642.png"},94052:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});const r=i.p+"assets/images/BuildGradleUpdated-8fd604f09a870f4791ae70db319d17aa.png"},98705:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});const r=i.p+"assets/images/CommitHash-63def4609fff5b777eb35d4210013189.png"},10641:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});const r=i.p+"assets/images/IdeaFormatter-9ea482076d71a3be86aa618cb24c6d6b.png"},60302:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});const r=i.p+"assets/images/RabbitmqConfig-f47820cdf414130571299246b36aca62.png"},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var r=i(96540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);