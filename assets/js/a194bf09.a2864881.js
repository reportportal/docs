"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[97727],{93244:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var s=o(85893),t=o(11151);const r={sidebar_position:7,sidebar_label:"How to check LDAP connection"},c="How to check LDAP connection",i={id:"issues-troubleshooting/HowToCheckLDAPConnection",title:"How to check LDAP connection",description:"Firstly, check the availability of your LDAP server from the server when ReportPortal is installed. For example, use the command ldapsearch.",source:"@site/docs/issues-troubleshooting/HowToCheckLDAPConnection.md",sourceDirName:"issues-troubleshooting",slug:"/issues-troubleshooting/HowToCheckLDAPConnection",permalink:"/docs/issues-troubleshooting/HowToCheckLDAPConnection",draft:!1,unlisted:!1,editUrl:"https://github.com/reportportal/docs/blob/develop/docs/issues-troubleshooting/HowToCheckLDAPConnection.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,sidebar_label:"How to check LDAP connection"},sidebar:"docs",previous:{title:"Resolve Analyzer Known Issues",permalink:"/docs/issues-troubleshooting/ResolveAnalyzerKnownIssues"},next:{title:"How to clean up the ReportPortal database using PG_REPACK",permalink:"/docs/issues-troubleshooting/HowToCleanUpTheReportPortalDatabaseUsingPGRepack"}},a={},l=[];function d(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"how-to-check-ldap-connection",children:"How to check LDAP connection"}),"\n",(0,s.jsx)(n.p,{children:"Firstly, check the availability of your LDAP server from the server when ReportPortal is installed. For example, use the command ldapsearch."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'ldapsearch -x -h <ldap hostname> -p <ldap port> -D "<bind DN>" -w "<bind password>" -b "<base users DN>" "uid=user1"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Output will be:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"# extended LDIF\n#\n# LDAPv3\n# base <dc=rp,dc=com> with scope subtree\n# filter: uid=user1\n# requesting: ALL\n#\n\n# user1, people, rp.com\ndn: cn=tester,ou=people,dc=rp,dc=com\nobjectClass: inetOrgPerson\ncn: user1\nsn: user1\nuid: user1\nuserPassword:: PASSWORD\nmail: user1@rp.com\ndescription: user1 for experiments \n\n# search result\nsearch: 2\nresult: 0 Success\n\n# numResponses: 2\n# numEntries: 1\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Hints"})}),"\n",(0,s.jsxs)(n.p,{children:["If you are using docker you can also use the internal container IP  ",(0,s.jsx)(n.code,{children:"docker inspect -f '\\{{range .NetworkSettings.Networks}}\\{{.IPAddress}}\\{{end}}' <LDAP container name>"})]})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);