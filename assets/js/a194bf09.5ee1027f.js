"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2063],{76378:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"issues-troubleshooting/HowToCheckLDAPConnection","title":"How to check LDAP connection","description":"Learn how to check LDAP connection for ReportPortal authentication troubleshooting.","source":"@site/docs/issues-troubleshooting/HowToCheckLDAPConnection.md","sourceDirName":"issues-troubleshooting","slug":"/issues-troubleshooting/HowToCheckLDAPConnection","permalink":"/docs/issues-troubleshooting/HowToCheckLDAPConnection","draft":false,"unlisted":false,"editUrl":"https://github.com/reportportal/docs/blob/develop/docs/issues-troubleshooting/HowToCheckLDAPConnection.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"sidebar_label":"How to check LDAP connection","description":"Learn how to check LDAP connection for ReportPortal authentication troubleshooting."},"sidebar":"docs","previous":{"title":"Resolve Analyzer Known Issues","permalink":"/docs/issues-troubleshooting/ResolveAnalyzerKnownIssues"},"next":{"title":"How to clean up the ReportPortal database using PG_REPACK","permalink":"/docs/issues-troubleshooting/HowToCleanUpTheReportPortalDatabaseUsingPGRepack"}}');var s=o(74848),r=o(28453);const c={sidebar_position:7,sidebar_label:"How to check LDAP connection",description:"Learn how to check LDAP connection for ReportPortal authentication troubleshooting."},i="How to check LDAP connection",a={},l=[];function u(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"how-to-check-ldap-connection",children:"How to check LDAP connection"})}),"\n",(0,s.jsx)(n.p,{children:"Firstly, check the availability of your LDAP server from the server when ReportPortal is installed. For example, use the command ldapsearch."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'ldapsearch -x -h <ldap hostname> -p <ldap port> -D "<bind DN>" -w "<bind password>" -b "<base users DN>" "uid=user1"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Output will be:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"# extended LDIF\n#\n# LDAPv3\n# base <dc=rp,dc=com> with scope subtree\n# filter: uid=user1\n# requesting: ALL\n#\n\n# user1, people, rp.com\ndn: cn=tester,ou=people,dc=rp,dc=com\nobjectClass: inetOrgPerson\ncn: user1\nsn: user1\nuid: user1\nuserPassword:: PASSWORD\nmail: user1@rp.com\ndescription: user1 for experiments \n\n# search result\nsearch: 2\nresult: 0 Success\n\n# numResponses: 2\n# numEntries: 1\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Hints"})}),"\n",(0,s.jsxs)(n.p,{children:["If you are using docker you can also use the internal container IP  ",(0,s.jsx)(n.code,{children:"docker inspect -f '\\{{range .NetworkSettings.Networks}}\\{{.IPAddress}}\\{{end}}' <LDAP container name>"})]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>i});var t=o(96540);const s={},r=t.createContext(s);function c(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);