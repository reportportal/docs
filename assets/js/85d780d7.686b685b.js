"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2530],{15170:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"dashboards-and-widgets/PossibleDashboardsInReportPortal","title":"Possible Dashboards in ReportPortal","description":"Explore the possible dashboards and widgets in ReportPortal to visualize your test results, monitor progress, and gain actionable insights.","source":"@site/docs/dashboards-and-widgets/PossibleDashboardsInReportPortal.mdx","sourceDirName":"dashboards-and-widgets","slug":"/dashboards-and-widgets/PossibleDashboardsInReportPortal","permalink":"/docs/dashboards-and-widgets/PossibleDashboardsInReportPortal","draft":false,"unlisted":false,"editUrl":"https://github.com/reportportal/docs/blob/develop/docs/dashboards-and-widgets/PossibleDashboardsInReportPortal.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"Possible Dashboards in ReportPortal","description":"Explore the possible dashboards and widgets in ReportPortal to visualize your test results, monitor progress, and gain actionable insights."},"sidebar":"docs","previous":{"title":"Dashboards and widgets","permalink":"/docs/dashboards-and-widgets/"},"next":{"title":"Reporting and metrics in ReportPortal","permalink":"/docs/dashboards-and-widgets/ReportingAndMetricsInReportPortal"}}');var r=t(74848),a=t(28453);const o={sidebar_position:1,sidebar_label:"Possible Dashboards in ReportPortal",description:"Explore the possible dashboards and widgets in ReportPortal to visualize your test results, monitor progress, and gain actionable insights."},i="Possible Dashboards in ReportPortal",d={},l=[{value:"Report for one tests run (A dashboard for an engineer)",id:"report-for-one-tests-run-a-dashboard-for-an-engineer",level:2},{value:"Build / Release/ Sprint Report (A dashboard for a Team leads, PM, DM)",id:"build--release-sprint-report-a-dashboard-for-a-team-leads-pm-dm",level:2}];function h(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{MediaViewer:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("MediaViewer",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"possible-dashboards-in-reportportal",children:"Possible Dashboards in ReportPortal"})}),"\n",(0,r.jsx)(s.p,{children:"ReportPortal.io is a powerful test automation reporting dashboard that acquires a lot of analytics. With this manual, we are wanting to help you to configure simple and understandable reports for your teams."}),"\n",(0,r.jsx)(s.p,{children:"Let's look on 2 examples of dashboards which you can generate:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Report for one Launch"}),"\n",(0,r.jsx)(s.li,{children:"Report for Build (Version, Release, Sprint)"}),"\n"]}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Precondition"}),"\nLet's assume that we have a Regression suite which contains:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"a suite with API test cases"}),"\n",(0,r.jsx)(s.li,{children:"a suite with UI test cases"}),"\n",(0,r.jsx)(s.li,{children:"a suite with integration test cases"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"The whole Regression is running against nightly build every day.\nDifferent teams are responsible for different suites."}),"\n",(0,r.jsx)(s.p,{children:"Which dashboard I can create in such conditions?"}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"report-for-one-tests-run-a-dashboard-for-an-engineer",children:"Report for one tests run (A dashboard for an engineer)"}),"\n",(0,r.jsx)(s.p,{children:"The goal for this test results dashboard to show the status of the latest test run. For instance to see the latest results for launch with an API suite."}),"\n",(0,r.jsx)(n,{src:t(58022),alt:"Dashboard to manage test results: Launch Report"}),"\n",(0,r.jsxs)(s.p,{children:["You can configure:\n",(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/PassingRateSummary",children:(0,r.jsx)(s.strong,{children:"Passing rate widget"})})," that shows a passing rate for a latest launch \"API suite'"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/MostPopularPatternTableTop20",children:(0,r.jsx)(s.strong,{children:"Most popular pattern"})})," tracks TOP-20 problems in the last and previous runs of this suite."]}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsx)(s.p,{children:"For Most popular pattern table, you should you create a set of rules and run Pattern Analysis"})}),"\n",(0,r.jsxs)(s.p,{children:["With ",(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/InvestigatedPercentageOfLaunches",children:(0,r.jsx)(s.strong,{children:"Investigated percentage of launches"})})," you can find out the status of failure investigations. You will be able to evaluate team performance and consistency of results."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/FailedCasesTrendChart",children:(0,r.jsx)(s.strong,{children:"Failed cases trend chart"})})," shows the history of failures in previous runs."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/LaunchesDurationChart",children:(0,r.jsx)(s.strong,{children:"Duration chart"})})," will be very helpful for those who track duration KPI and want to increase the speed of tests run."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/TestCasesGrowthTrendChart",children:(0,r.jsx)(s.strong,{children:"Test growth trend chart"})})," shows you the speed of new test cases creation."]}),"\n",(0,r.jsxs)(s.p,{children:["Also, you can create ",(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/FlakyTestCasesTableTop50",children:(0,r.jsx)(s.strong,{children:'"Most flaky test cases"'})})," and ",(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/MostFailedTestCasesTableTop50",children:(0,r.jsx)(s.strong,{children:'"Most failed test case"'})})," and find the most unstable items which should be taken into account."]}),"\n",(0,r.jsx)(s.p,{children:"Let's assume that you have a lot of test results and a lot of teams."}),"\n",(0,r.jsxs)(s.p,{children:["You can create ",(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/OverallStatistics",children:(0,r.jsx)(s.strong,{children:"Overall statistics"})})," and ",(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/LaunchesTable",children:(0,r.jsx)(s.strong,{children:"Launches table"})}),", and now a team who is responsible for API suite has no need to go to the test results. It can use only this dashboard which gives enough information for test failure management."]}),"\n",(0,r.jsx)(s.h2,{id:"build--release-sprint-report-a-dashboard-for-a-team-leads-pm-dm",children:"Build / Release/ Sprint Report (A dashboard for a Team leads, PM, DM)"}),"\n",(0,r.jsx)(s.p,{children:"The goal of this report to show status for the whole version. It means for this report we want to see the latest results of aggregated statistics for several lanches."}),"\n",(0,r.jsx)(s.p,{children:"In our example, I want to see the latest results for the whole Regression (latest results for API suite + latest results for UI + latest results for Integration tests)."}),"\n",(0,r.jsx)(s.p,{children:"Also, it is very useful to compare the results of the Regression on the current version with the Regression on previous versions and to see details about business metrics."}),"\n",(0,r.jsx)(n,{src:t(98551),alt:"Dashboard for QA automation: Build Report"}),"\n",(0,r.jsx)(s.p,{children:"On this dashboard you can see different metrics:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"A passing rate for the whole Regression"}),"\n",(0,r.jsxs)(s.li,{children:["With ",(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/CumulativeTrendChart",children:(0,r.jsx)(s.strong,{children:"Cumulative trend chart"})})," you will be able to compare different versions on one chart, to compare different runs for the current regression"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/ComponentHealthCheck",children:(0,r.jsx)(s.strong,{children:"Component Health Check Widget"})})," would show you product:"]}),"\n"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"on different env"}),"\n",(0,r.jsx)(s.li,{children:"on a different dimension"}),"\n",(0,r.jsx)(s.li,{children:"by business metrics / by features/ by user roles / by etc"}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Also with a help of ",(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/ComponentHealthCheck",children:(0,r.jsx)(s.strong,{children:"Component Health Check Widget"})})," you can create a Test Pyramid."]}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsx)(s.p,{children:"You need to report test executions with attributes which specified needed metrics or envs"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"/dashboards-and-widgets/UniqueBugsTable",children:(0,r.jsx)(s.strong,{children:"Unique bugs table"})})," helps you collect and analyze new bugs in the system"]}),"\n"]}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsx)(s.p,{children:"Component Health Check Widget and Cumulative trend chart are very configurable and you can create your own widget based on project needs."})})]})}function c(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},98551:(e,s,t)=>{t.r(s),t.d(s,{default:()=>n});const n=t.p+"assets/images/BuildReport-d32e8a41eea456d0600564ddb90eea7c.png"},58022:(e,s,t)=>{t.r(s),t.d(s,{default:()=>n});const n=t.p+"assets/images/LaunchReport-42cc7de4c33f895ec89ae7ac1f6a0d0a.png"},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>i});var n=t(96540);const r={},a=n.createContext(r);function o(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);