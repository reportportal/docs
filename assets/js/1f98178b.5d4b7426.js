"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2015],{94218:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"quality-gates/IntegrationWithCICD/IntegrationWithJenkins","title":"Integration with Jenkins","description":"In this article, you will learn how to seamlessly integrate Jenkins into your development workflow.","source":"@site/docs/quality-gates/IntegrationWithCICD/IntegrationWithJenkins.mdx","sourceDirName":"quality-gates/IntegrationWithCICD","slug":"/quality-gates/IntegrationWithCICD/IntegrationWithJenkins","permalink":"/docs/quality-gates/IntegrationWithCICD/IntegrationWithJenkins","draft":false,"unlisted":false,"editUrl":"https://github.com/reportportal/docs/blob/develop/docs/quality-gates/IntegrationWithCICD/IntegrationWithJenkins.mdx","tags":[],"version":"current","frontMatter":{"sidebar_label":"Integration with Jenkins"},"sidebar":"docs","previous":{"title":"Integration with GitLab CI","permalink":"/docs/quality-gates/IntegrationWithCICD/IntegrationWithGitLabCI"},"next":{"title":"User role guides","permalink":"/docs/user-role-guides/"}}');var s=n(74848),o=n(28453);const r={sidebar_label:"Integration with Jenkins"},a="Integration with Jenkins",l={},d=[{value:"Step 1: Install \u201cWebhook Step\u201d Jenkins plugin",id:"step-1-install-webhook-step-jenkins-plugin",level:2},{value:"Step 2: Define webhook configuration to the Jenkins job/pipeline before tests execution:",id:"step-2-define-webhook-configuration-to-the-jenkins-jobpipeline-before-tests-execution",level:2},{value:"Step 3: Run test with webhook",id:"step-3-run-test-with-webhook",level:2},{value:"Step 4: Configure webhook waiting data from RP",id:"step-4-configure-webhook-waiting-data-from-rp",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components},{MediaViewer:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("MediaViewer",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"integration-with-jenkins",children:"Integration with Jenkins"})}),"\n",(0,s.jsx)(t.p,{children:"In this article, you will learn how to seamlessly integrate Jenkins into your development workflow."}),"\n",(0,s.jsx)(t.h2,{id:"step-1-install-webhook-step-jenkins-plugin",children:"Step 1: Install \u201cWebhook Step\u201d Jenkins plugin"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Go to \u201cManage Jenkins\u201d -> \u201cManage Plugins\u201d."}),"\n",(0,s.jsx)(t.li,{children:"Make sure that the necessary Jenkins plugin is installed:"}),"\n"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Switch to the \u201cInstalled\u201d tab and search for the \u201cWebhook Step\u201d plugin."}),"\n",(0,s.jsxs)(t.li,{children:["If no results of the search:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Switch to the \u201cAvailable\u201d tab."}),"\n",(0,s.jsx)(t.li,{children:"Search for \u201cWebhook Step\u201d."}),"\n",(0,s.jsx)(t.li,{children:"Install the plugin with \u201cDownload now and install after restart\u201d."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"step-2-define-webhook-configuration-to-the-jenkins-jobpipeline-before-tests-execution",children:"Step 2: Define webhook configuration to the Jenkins job/pipeline before tests execution:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-groovy",children:'def hook = registerWebhook();\ndef encodedUrl = sh(script: "echo -n ${hook.getURL().toString()} | base64 -w 0", returnStdout: true)\n'})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"encodedUrl"})," \u2013 this is a unique string that will be generated from the Jenkins job/pipeline and connect each reported launch with the appropriate Jenkins run from which the launch was reported."]}),"\n",(0,s.jsx)(t.h2,{id:"step-3-run-test-with-webhook",children:"Step 3: Run test with webhook"}),"\n",(0,s.jsxs)(t.p,{children:["Put the ",(0,s.jsx)(t.code,{children:"encodedUrl"})," variable into the test execution string at the enumeration of ",(0,s.jsx)(t.code,{children:"RP.attributes"}),". For example (Maven build):"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-groovy",children:"Drp.attributes='k1:v1;k2:v2;rp.webhook.key:${encodedUrl}'\n"})}),"\n",(0,s.jsxs)(t.p,{children:["As result launch with attribute ",(0,s.jsx)(t.code,{children:"rp.webhook.key:${encodedUrl}"})," will be reported. On quality gate finish RP will send request to ",(0,s.jsx)(t.code,{children:"{ encodedUrl }"})," with quality gate results:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'{\n  "launchId": "{launch_id}",\n  "status": "[PASSED|FAILED|UNDEFINED]"\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"Response can be parsed on the next step."}),"\n",(0,s.jsx)(t.h2,{id:"step-4-configure-webhook-waiting-data-from-rp",children:"Step 4: Configure webhook waiting data from RP"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"a. Option #1"})}),"\n",(0,s.jsx)(t.p,{children:"This option allows sending the Quality Gates result status to the separate pipeline stage. It doesn\u2019t affect the tests execution stage, and the status of that stage will be determined by the result of the Quality Gate status.\nAdd additional pipeline stage. Wait for webhook and define the particular TIMEOUT_TIME, how long Jenkins should wait for data from RP:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-groovy",children:"stage('Wait for webhook') {\n     timeout(time: params.TIMEOUT_TIME, unit: params.TIMEOUT_UNIT) {\n\n         echo 'Waiting for RP processing...'\n         data = waitForWebhook hook;\n         echo \"Processing finished... ${data}\"\n\n         def jsonData = readJSON text: data\n         assert jsonData['status'] == 'PASSED' \n      }\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Parameters for ",(0,s.jsx)(t.code,{children:"TIMEOUT_TIME"})," and ",(0,s.jsx)(t.code,{children:"TIMEOUT_UNIT"})," can be defined like that:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-groovy",children:"parameters {\n        string(name: 'TIMEOUT_TIME', defaultValue: '30', description: '')\n        string(name: 'TIMEOUT_UNIT', defaultValue: 'SECONDS', description: '')\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"b. Option #2"})}),"\n",(0,s.jsx)(t.p,{children:"This option should send the results from the RP to the tests run pipeline stage, and the status of that stage (tests execution) will be determined by the result of the Quality Gate status.\nAdd next code in the pipeline stage, where tests run:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-groovy",children:"echo 'Waiting for RP processing...'\ndata = waitForWebhook hook;\necho \"Processing finished... ${data}\"\n\ndef jsonData = readJSON text: data\nassert jsonData['status'] == 'PASSED'\n"})}),"\n",(0,s.jsx)(t.p,{children:"If the Jenkins received a response about Quality Gate status from RP, the build status should be appropriately marked:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Jenkins Job Status"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Quality Gate Status"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"SUCCESS"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"PASSED"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Quality Gate is passed"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"ABORTED"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"UNDEFINED"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The Jenkins timeout has been exceeded"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"FAILED"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"FAILED"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Quality Gate is failed"})]})]})]}),"\n",(0,s.jsx)(n,{src:"https://youtu.be/W7BBhni9ANU",alt:"Quality Gates in CI/CD and our continuous testing platform",type:"video"})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(96540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);