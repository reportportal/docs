"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9703],{17889:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"installation-steps-advanced/ComponentsOverview","title":"Components Overview","description":"Gateway","source":"@site/docs/installation-steps-advanced/ComponentsOverview.md","sourceDirName":"installation-steps-advanced","slug":"/installation-steps-advanced/ComponentsOverview","permalink":"/docs/installation-steps-advanced/ComponentsOverview","draft":false,"unlisted":false,"editUrl":"https://github.com/reportportal/docs/blob/develop/docs/installation-steps-advanced/ComponentsOverview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"Components Overview"},"sidebar":"docs","previous":{"title":"Installation Steps Advanced","permalink":"/docs/installation-steps-advanced/"},"next":{"title":"Basic monitoring configuration","permalink":"/docs/installation-steps-advanced/BasicMonitoringConfiguration"}}');var s=i(74848),r=i(28453);const a={sidebar_position:1,sidebar_label:"Components Overview"},o="Components Overview",c={},l=[{value:"Gateway",id:"gateway",level:2},{value:"API Service",id:"api-service",level:2},{value:"UAT Service",id:"uat-service",level:2},{value:"Analyzer Service",id:"analyzer-service",level:2},{value:"Migrations Service",id:"migrations-service",level:2},{value:"Index Service",id:"index-service",level:2},{value:"UI Service",id:"ui-service",level:2}];function d(e){const n={a:"a",br:"br",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"components-overview",children:"Components Overview"})}),"\n",(0,s.jsx)(n.h2,{id:"gateway",children:"Gateway"}),"\n",(0,s.jsx)(n.p,{children:"Gateway is a main entry point to application services. It is in-charge of routing requests to appropriate service and load balancing.\nThere are two options proposed:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://traefik.io",children:"Traefik"})," for Docker installation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.nginx.com/products/nginx/kubernetes-ingress-controller",children:"NGINX Ingress Controller"})," for Kubernetes"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"api-service",children:"API Service"}),"\n",(0,s.jsx)(n.p,{children:"The API service is the core of ReportPortal TestOps tool. It is in-charge of handling incoming requests from agents and UI."}),"\n",(0,s.jsx)(n.h2,{id:"uat-service",children:"UAT Service"}),"\n",(0,s.jsx)(n.p,{children:"The UAT (Unified Authorization Trap) service is module that authenticate users and creates/revokes user tokens.\nIt supports various types of authentication mechanisms:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Basic Auth"}),"\n",(0,s.jsx)(n.li,{children:"GitHub Auth (OAuth2)"}),"\n",(0,s.jsx)(n.li,{children:"LDAP Auth\nThe UAT service itself is a OAuth2 server that authenticates a user using mechanisms mentioned\nbelow and creates internal OAuth2 token which is used by UI and agents. There are two types of tokens:"}),"\n",(0,s.jsx)(n.li,{children:"UI (expiring token)"}),"\n",(0,s.jsx)(n.li,{children:"API - non-expiring token, intended to use on agent side"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"analyzer-service",children:"Analyzer Service"}),"\n",(0,s.jsxs)(n.p,{children:["Keeps index of user logs per project and provides ability to perform search by that index. Used by auto-analysis functionality.",(0,s.jsx)(n.br,{}),"\n","Collects and processes the information, then sends it to OpenSearch."]}),"\n",(0,s.jsx)(n.h2,{id:"migrations-service",children:"Migrations Service"}),"\n",(0,s.jsx)(n.p,{children:"Database migrations written in Go. Migrate reads migrations from sources and applies them in correct order to a database."}),"\n",(0,s.jsx)(n.h2,{id:"index-service",children:"Index Service"}),"\n",(0,s.jsx)(n.p,{children:"The Index services handle requests that do not match any pattern of other services.\nIt also aggregates some information/health data from other services to provide UI with that information."}),"\n",(0,s.jsx)(n.h2,{id:"ui-service",children:"UI Service"}),"\n",(0,s.jsx)(n.p,{children:"All statics for user interface."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(96540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);