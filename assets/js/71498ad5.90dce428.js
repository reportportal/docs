"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[11413],{71282:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>p});var o=n(85893),i=n(11151);const r={sidebar_position:4,sidebar_label:"Import data to ReportPortal"},s="Import data to ReportPortal",a={id:"log-data-in-reportportal/ImportDataToReportPortal",title:"Import data to ReportPortal",description:"Import via UI",source:"@site/docs/log-data-in-reportportal/ImportDataToReportPortal.mdx",sourceDirName:"log-data-in-reportportal",slug:"/log-data-in-reportportal/ImportDataToReportPortal",permalink:"/docs/log-data-in-reportportal/ImportDataToReportPortal",draft:!1,unlisted:!1,editUrl:"https://github.com/reportportal/docs/blob/develop/docs/log-data-in-reportportal/ImportDataToReportPortal.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"Import data to ReportPortal"},sidebar:"docs",previous:{title:"Reporting SDK",permalink:"/docs/log-data-in-reportportal/ReportingSDK"},next:{title:"How to get an access token in ReportPortal",permalink:"/docs/log-data-in-reportportal/HowToGetAnAccessTokenInReportPortal"}},l={},p=[{value:"Import via UI",id:"import-via-ui",level:2},{value:"Import via API",id:"import-via-api",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{MediaViewer:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("MediaViewer",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"import-data-to-reportportal",children:"Import data to ReportPortal"}),"\n",(0,o.jsx)(t.h2,{id:"import-via-ui",children:"Import via UI"}),"\n",(0,o.jsx)(t.p,{children:"Import functionality gives the opportunity to upload log files via UI."}),"\n",(0,o.jsxs)(t.p,{children:["To start the import process, you should have at least one import plugin enabled: either ",(0,o.jsx)(t.a,{href:"/plugins/JUnit",children:"JUnit"})," or ",(0,o.jsx)(t.a,{href:"/plugins/RobotFramework",children:"RobotFramework"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"To import launch via UI:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Log in to ReportPortal."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Go to the Launches page."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Click \u2018Import\u2019 button."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Select appropriate option in the \u2018Report Type\u2019 dropdown on the \u2018Import launch\u2019 modal window."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Click the drag-and-drop area to add .xml or .zip file under 32MB."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Click \u2018Import\u2019 button and then \u2018OK\u2019 button on the \u2018Import launch\u2019 modal window."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"ReportPortal checks file size and format first. Imported files should meet the following requirements:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"File format is zip archive or XML file."}),"\n",(0,o.jsx)(t.li,{children:"File size is up to 32Mb."}),"\n",(0,o.jsx)(t.li,{children:"Timestamp format is 2022-11-17T10:15:43"}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"If the file format is incorrect, it is marked in red, and the reason is shown in the tooltip on hovering over the file in the pop-up window. This is to prevent any incorrect files from being run through the import process."}),"\n",(0,o.jsx)(t.p,{children:"If all the files added are correct you may click the 'Import' or 'Cancel' buttons:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"The Cancel button closes the pop-up window without any operation under log files."}),"\n",(0,o.jsx)(t.li,{children:"The Import button starts copying files into the RP file storage."}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"The System will start copying files into the RP file storage if the files meet the following requirements:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"The File format is a zip archive or XML file."}),"\n",(0,o.jsx)(t.li,{children:"The File size is up to 32Mb."}),"\n",(0,o.jsx)(t.li,{children:"The XML files must have the JUnit or RobotFramework structure in the zip archive and in XML files depend on Report Type you have chosen."}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"The system copies valid XML files into RP file storage and marked them in green in the \u2018Import launches\u2019 pop-up window."}),"\n",(0,o.jsx)(t.p,{children:"If files from the zip archive have formats other than XML, the system will skip them."}),"\n",(0,o.jsx)(t.p,{children:"If the XML file is not in the correct structure (depend on Report Type \u2013 JUnit or RobotFramework), the system will interrupt the process of copying and mark the file in red. The reason is then shown on the tooltip when hovering the file in the pop-up window."}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"Files that were copied earlier stay in the RP file storage."})}),"\n",(0,o.jsx)(t.p,{children:"When all valid log files are downloaded and processed, the 'OK' button is enabled. The 'OK' button closes the \u2018Import launches\u2019 pop-up window."}),"\n",(0,o.jsx)(r,{src:"https://youtu.be/AQ4wZgKMNt4",alt:"Import via UI on our test automation reporting dashboard",type:"video"}),"\n",(0,o.jsx)(t.p,{children:"You can only interrupt the import in UI when files are being downloaded into the RP file storage. In this case, you should click the 'Cancel' button (or X button in the pop-up window) and confirm the cancellation of import and then click the 'Cancel' button again."}),"\n",(0,o.jsx)(r,{src:"https://youtu.be/wv_zGn2SfuI",alt:"Import via UI. Cancel button",type:"video"}),"\n",(0,o.jsx)(t.h2,{id:"import-via-api",children:"Import via API"}),"\n",(0,o.jsx)(t.p,{children:"The details about import via API you can find on the ReportPortal menu at the bottom: API -> Plugin Controller -> Send report to the specified plugin for importing"}),"\n",(0,o.jsx)(r,{src:n(1592),alt:"Import via API in our qa automation dashboard"}),"\n",(0,o.jsx)(t.p,{children:"You can configure parameters (name, description, attributes) for the imported launch by specifying these values in your API request."}),"\n",(0,o.jsxs)(t.p,{children:["The endpoint ",(0,o.jsx)(t.code,{children:"POST /v1/plugin/{projectName}/{pluginName}/import"})," allows importing a launch into the specified project using an XML or ZIP file."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Permissions:"})," Admin, PM, Member, Customer, Operator."]}),"\n",(0,o.jsx)(t.p,{children:"Here's an example of a request to the endpoint:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:'curl -L -X POST \'http://localhost:8080/api/v1/plugin/superadmin_personal/junit/import\' \\\n-H \'Content-Type: multipart/form-data\' \\\n-H \'Authorization: Bearer {token}\' \\\n-F \'file=@"file_path.zip";type=application/x-zip-compressed\' \\\n-F \'launchImportRq="{\n  \\"attributes\\": [\n    {\n      \\"key\\": \\"skippedIsNotIssue\\",\n      \\"system\\": true,\n      \\"value\\": \\"true\\"\n    }\n  ],\n  \\"description\\": \\"Custom launch description\\",\n  \\"mode\\": \\"DEFAULT\\",\n  \\"name\\": \\"Custom launch name\\",\n  \\"startTime\\": \\"2023-11-08T10:23:34.259Z\\"\n}";type=application/json\'\n'})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Query parameters:"})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"pluginName"})," \u2013 mandatory field to specify import plugin"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"projectName"})," \u2013 mandatory field to specify project name"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"file"})," \u2013 mandatory area to upload file for import"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"launchImportRq"})," is application/json part of the request where you can specify needed custom information about launch."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"attributes"})," \u2013 array of attributes"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"description"})," \u2013 custom launch description"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"name"})," \u2013 custom launch name"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"startTime"})," \u2013 if launch start time needed, or will be used first time in imported report"]}),"\n",(0,o.jsx)(r,{src:n(29849),alt:"Query parameters for API import"}),"\n",(0,o.jsx)(t.p,{children:'If the array of attributes contains the next "skippedIsNotIssue" attribute marked as system, then all test items with SKIPPED status will be processed without applying a "To Investigate" defect type.'}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:' "attributes": [\n    {\n      "key": "skippedIsNotIssue",\n      "system": true,\n      "value": "true"\n    }\n  ]\n'})}),"\n",(0,o.jsx)(t.p,{children:'When set to "false", test items with SKIPPED status will be processed and marked with the defect type "To Investigate". If the parameter is not set, the default behavior is equivalent to "false".'}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Scenario 1"}),' (Test items with SKIPPED status have "To Investigate" status):']}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:'curl -L -X POST \'http://localhost:8080/api/v1/plugin/superadmin_personal/junit/import\' \\\n-H \'Content-Type: multipart/form-data\' \\\n-H \'Authorization: Bearer {token}\' \\\n-F \'file=@Launch.zip;type=application/x-zip-compressed\' \\\n-F \'launchImportRq="{\n  \\"description\\": \\"Launch description\\",\n  \\"mode\\": \\"DEFAULT\\",\n  \\"name\\": \\"Launch\\"\n}";type=application/json\'\n'})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Scenario 2"}),' (Test items with SKIPPED status don\'t have "To Investigate" status)']}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:'curl -L -X POST \'http://localhost:8080/api/v1/plugin/superadmin_personal/junit/import\' \\\n-H \'Content-Type: multipart/form-data\' \\\n-H \'Authorization: Bearer {token}\' \\\n-F \'file=@Launch.zip;type=application/x-zip-compressed\' \\\n-F \'launchImportRq="{\n  \\"attributes\\": [\n    {\n      \\"key\\": \\"skippedIsNotIssue\\",\n      \\"system\\": true,\n      \\"value\\": \\"true\\"\n    }\n  ],\n  \\"description\\": \\"Launch description\\",\n  \\"mode\\": \\"DEFAULT\\",\n  \\"name\\": \\"Launch\\"\n}";type=application/json\'\n'})}),"\n",(0,o.jsx)(r,{src:"https://youtu.be/nSnhm31-8iE",alt:"Import via API on our test automation results dashboard",type:"video"})]})}function c(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1592:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});const o=n.p+"assets/images/ImportViaAPI-97ffd348af3cdf104014a9bf06b28591.png"},29849:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});const o=n.p+"assets/images/parameters-4e16380dab6b7ed0bdb51a730506ac01.png"}}]);