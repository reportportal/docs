"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2974],{90949:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>i,contentTitle:()=>p,default:()=>d,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"log-data-in-reportportal/test-framework-integration/Java/Loggers/ApacheHttpComponents","title":"ReportPortal Apache HttpComponents Integration","description":"Integrate Apache HttpComponents with ReportPortal for comprehensive test automation reporting tools and HTTP request/response logging.","source":"@site/docs/log-data-in-reportportal/test-framework-integration/Java/Loggers/ApacheHttpComponents.md","sourceDirName":"log-data-in-reportportal/test-framework-integration/Java/Loggers","slug":"/log-data-in-reportportal/test-framework-integration/Java/Loggers/ApacheHttpComponents","permalink":"/docs/log-data-in-reportportal/test-framework-integration/Java/Loggers/ApacheHttpComponents","draft":false,"unlisted":false,"editUrl":"https://github.com/reportportal/docs/blob/develop/docs/log-data-in-reportportal/test-framework-integration/Java/Loggers/ApacheHttpComponents.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"sidebar_label":"Apache HttpComponents","description":"Integrate Apache HttpComponents with ReportPortal for comprehensive test automation reporting tools and HTTP request/response logging."},"sidebar":"docs","previous":{"title":"OkHttp3","permalink":"/docs/log-data-in-reportportal/test-framework-integration/Java/Loggers/OkHttp3"},"next":{"title":"JavaScript","permalink":"/docs/log-data-in-reportportal/test-framework-integration/JavaScript/"}}');var r=o(74848),a=o(28453);const s={sidebar_position:6,sidebar_label:"Apache HttpComponents",description:"Integrate Apache HttpComponents with ReportPortal for comprehensive test automation reporting tools and HTTP request/response logging."},p="ReportPortal Apache HttpComponents Integration",i={},l=[];function c(t){const e={a:"a",h1:"h1",header:"header",p:"p",...(0,a.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"reportportal-apache-httpcomponents-integration",children:"ReportPortal Apache HttpComponents Integration"})}),"\n",(0,r.jsxs)(e.p,{children:["The logger intercept and logs all Requests and Responses issued by ",(0,r.jsx)(e.a,{href:"https://hc.apache.org/",children:"Apache HttpComponents"})," into ReportPortal in Markdown format, including multipart requests. It recognizes payload types and attach them in corresponding manner: image types will be logged as images with thumbnails, binary types will be logged as entry attachments, text types will be formatted and logged in Markdown code blocks."]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://github.com/reportportal/logger-java-httpcomponents#readme",children:"Installation guide"})})]})}function d(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(c,{...t})}):c(t)}},28453:(t,e,o)=>{o.d(e,{R:()=>s,x:()=>p});var n=o(96540);const r={},a=n.createContext(r);function s(t){const e=n.useContext(a);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function p(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:s(t.components),n.createElement(a.Provider,{value:e},t.children)}}}]);