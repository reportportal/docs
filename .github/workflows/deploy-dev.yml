# Copyright 2023 EPAM Systems
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Deploy to dev (AWS S3)
env:
  AWS_S3_BUCKET_NAME : ${{ vars.AWS_S3_BUCKET_NAME }}
  AWS_REGION_NAME : ${{ vars.AWS_REGION_NAME }}
  BUILD_DIR : "build/"
  DOCS_BASE_URL: "/"

on:
  push:
    branches:
      - develop
    paths-ignore:
      - '.github/**'
      - README.md
  workflow_dispatch:

jobs:
  empty-s3-bucket:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Empty AWS S3 bucket
        run: aws s3 rm s3://${{ env.AWS_S3_BUCKET_NAME }} --recursive

  deploy:
    runs-on: ubuntu-latest
    needs: [empty-s3-bucket]
    environment: development
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install of node dependencies
        run: npm ci

      - name: create env file
        run: |
          touch .env
          echo DOCS_BASE_URL=${{ env.DOCS_BASE_URL }} >> .env

      - name: Build the OpenAPI documentation
        run: npm run gen-all

      - name: Build the source code
        run: npm run build

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Deploy to AWS S3
        run: aws s3 sync ./${{ env.BUILD_DIR }} s3://${{ env.AWS_S3_BUCKET_NAME }}

      - name: Invalidate AWS CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ vars.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
